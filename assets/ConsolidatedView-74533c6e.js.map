{"version":3,"file":"ConsolidatedView-74533c6e.js","sources":["../../src/pages/ConsolidatedView.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { AccountService } from \"../services/accountService\";\r\nimport { PortfolioService } from \"../services/portfolioService\";\r\nimport { Position } from \"../types\";\r\nimport { formatCurrency } from \"../utils/currencyUtils\";\r\n\r\ninterface ConsolidatedPosition {\r\n  symbol: string;\r\n  name: string;\r\n  totalQuantity: number;\r\n  weightedAvgPrice: number;\r\n  currentPrice: number;\r\n  totalValue: number;\r\n  totalCost: number;\r\n  unrealizedPnL: number;\r\n  returnRate: number;\r\n  positions: (Position & {\r\n    portfolioName: string;\r\n    accountName: string;\r\n    currency: string;\r\n  })[];\r\n}\r\n\r\nexport const ConsolidatedView: React.FC = () => {\r\n  const [consolidatedPositions, setConsolidatedPositions] = useState<\r\n    ConsolidatedPosition[]\r\n  >([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sortBy, setSortBy] = useState<\"symbol\" | \"value\" | \"return\">(\"value\");\r\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"desc\");\r\n\r\n  useEffect(() => {\r\n    loadConsolidatedData();\r\n  }, []);\r\n\r\n  // 정렬 변경 시 데이터 재정렬\r\n  useEffect(() => {\r\n    if (consolidatedPositions.length > 0) {\r\n      const sortedPositions = [...consolidatedPositions].sort((a, b) => {\r\n        let compareValue = 0;\r\n        switch (sortBy) {\r\n          case \"symbol\":\r\n            compareValue = a.symbol.localeCompare(b.symbol);\r\n            break;\r\n          case \"value\":\r\n            compareValue = a.totalValue - b.totalValue;\r\n            break;\r\n          case \"return\":\r\n            compareValue = a.returnRate - b.returnRate;\r\n            break;\r\n        }\r\n        return sortOrder === \"asc\" ? compareValue : -compareValue;\r\n      });\r\n      setConsolidatedPositions(sortedPositions);\r\n    }\r\n  }, [sortBy, sortOrder]);\r\n\r\n  const loadConsolidatedData = async () => {\r\n    try {\r\n      // 모든 포트폴리오와 계좌 정보 가져오기\r\n      const [portfolios, accounts] = await Promise.all([\r\n        PortfolioService.getAll(),\r\n        AccountService.getAll(),\r\n      ]);\r\n\r\n      // 모든 포지션 가져오기\r\n      const allPositions: (Position & {\r\n        portfolioName: string;\r\n        accountName: string;\r\n        currency: string;\r\n      })[] = [];\r\n\r\n      for (const portfolio of portfolios) {\r\n        const portfolioWithPositions = await PortfolioService.getWithPositions(\r\n          portfolio.id!\r\n        );\r\n        const account = accounts.find((a) => a.id === portfolio.accountId);\r\n\r\n        portfolioWithPositions.positions.forEach((position) => {\r\n          allPositions.push({\r\n            ...position,\r\n            portfolioName: portfolio.name,\r\n            accountName: account?.accountName || \"알 수 없음\",\r\n            currency: portfolio.currency,\r\n          });\r\n        });\r\n      }\r\n\r\n      // 티커별로 통합\r\n      const consolidatedMap = new Map<string, ConsolidatedPosition>();\r\n\r\n      allPositions.forEach((position) => {\r\n        const key = position.symbol;\r\n\r\n        if (!consolidatedMap.has(key)) {\r\n          consolidatedMap.set(key, {\r\n            symbol: position.symbol,\r\n            name: position.name,\r\n            totalQuantity: 0,\r\n            weightedAvgPrice: 0,\r\n            currentPrice: position.currentPrice,\r\n            totalValue: 0,\r\n            totalCost: 0,\r\n            unrealizedPnL: 0,\r\n            returnRate: 0,\r\n            positions: [],\r\n          });\r\n        }\r\n\r\n        const consolidated = consolidatedMap.get(key)!;\r\n        const positionCost = position.quantity * position.avgPrice;\r\n        const positionValue = position.quantity * position.currentPrice;\r\n\r\n        // 가중평균 계산\r\n        consolidated.totalCost += positionCost;\r\n        consolidated.totalQuantity += position.quantity;\r\n        consolidated.weightedAvgPrice =\r\n          consolidated.totalCost / consolidated.totalQuantity;\r\n\r\n        consolidated.totalValue += positionValue;\r\n        consolidated.currentPrice = position.currentPrice; // 최신 현재가 사용\r\n        consolidated.unrealizedPnL =\r\n          consolidated.totalValue - consolidated.totalCost;\r\n        consolidated.returnRate =\r\n          consolidated.totalCost > 0\r\n            ? (consolidated.unrealizedPnL / consolidated.totalCost) * 100\r\n            : 0;\r\n\r\n        consolidated.positions.push(position);\r\n      });\r\n\r\n      // 초기 정렬 적용\r\n      const initialPositions = Array.from(consolidatedMap.values()).sort(\r\n        (a, b) => {\r\n          let compareValue = 0;\r\n          switch (sortBy) {\r\n            case \"symbol\":\r\n              compareValue = a.symbol.localeCompare(b.symbol);\r\n              break;\r\n            case \"value\":\r\n              compareValue = a.totalValue - b.totalValue;\r\n              break;\r\n            case \"return\":\r\n              compareValue = a.returnRate - b.returnRate;\r\n              break;\r\n          }\r\n          return sortOrder === \"asc\" ? compareValue : -compareValue;\r\n        }\r\n      );\r\n\r\n      setConsolidatedPositions(initialPositions);\r\n    } catch (error) {\r\n      console.error(\"통합 데이터 로딩 중 오류:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSort = (newSortBy: \"symbol\" | \"value\" | \"return\") => {\r\n    if (sortBy === newSortBy) {\r\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\r\n    } else {\r\n      setSortBy(newSortBy);\r\n      setSortOrder(\"desc\");\r\n    }\r\n  };\r\n\r\n  const getTotalPortfolioValue = () => {\r\n    return consolidatedPositions.reduce((sum, pos) => sum + pos.totalValue, 0);\r\n  };\r\n\r\n  const getTotalUnrealizedPnL = () => {\r\n    return consolidatedPositions.reduce(\r\n      (sum, pos) => sum + pos.unrealizedPnL,\r\n      0\r\n    );\r\n  };\r\n\r\n  const getOverallReturnRate = () => {\r\n    const totalCost = consolidatedPositions.reduce(\r\n      (sum, pos) => sum + pos.totalCost,\r\n      0\r\n    );\r\n    const totalPnL = getTotalUnrealizedPnL();\r\n    return totalCost > 0 ? (totalPnL / totalCost) * 100 : 0;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">전체 포지션 통합 보기</h1>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n            <h3 className=\"text-sm text-gray-400 mb-1\">총 포트폴리오 가치</h3>\r\n            <p className=\"text-2xl font-bold text-blue-400\">\r\n              ₩{formatCurrency(getTotalPortfolioValue(), \"KRW\")}\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n            <h3 className=\"text-sm text-gray-400 mb-1\">총 평가손익</h3>\r\n            <p\r\n              className={`text-2xl font-bold ${\r\n                getTotalUnrealizedPnL() >= 0 ? \"text-green-400\" : \"text-red-400\"\r\n              }`}\r\n            >\r\n              {getTotalUnrealizedPnL() >= 0 ? \"+\" : \"\"}₩\r\n              {formatCurrency(Math.abs(getTotalUnrealizedPnL()), \"KRW\")}\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n            <h3 className=\"text-sm text-gray-400 mb-1\">총 수익률</h3>\r\n            <p\r\n              className={`text-2xl font-bold ${\r\n                getOverallReturnRate() >= 0 ? \"text-green-400\" : \"text-red-400\"\r\n              }`}\r\n            >\r\n              {getOverallReturnRate() >= 0 ? \"+\" : \"\"}\r\n              {getOverallReturnRate().toFixed(2)}%\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 메인 콘텐츠 영역 */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        {/* 왼쪽: 자산 구성 차트 */}\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-gray-800 rounded-lg p-6\">\r\n            <h2 className=\"text-xl font-bold mb-4\">자산 구성</h2>\r\n            {consolidatedPositions.length === 0 ? (\r\n              <div className=\"text-center py-8 text-gray-400\">\r\n                등록된 포지션이 없습니다.\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {consolidatedPositions.map((position, index) => {\r\n                  const percentage =\r\n                    (position.totalValue / getTotalPortfolioValue()) * 100;\r\n                  const colors = [\r\n                    \"bg-blue-500\",\r\n                    \"bg-green-500\",\r\n                    \"bg-yellow-500\",\r\n                    \"bg-red-500\",\r\n                    \"bg-purple-500\",\r\n                    \"bg-pink-500\",\r\n                    \"bg-indigo-500\",\r\n                    \"bg-orange-500\",\r\n                  ];\r\n                  const color = colors[index % colors.length];\r\n\r\n                  return (\r\n                    <div\r\n                      key={position.symbol}\r\n                      className=\"flex items-center justify-between\"\r\n                    >\r\n                      <div className=\"flex items-center flex-1\">\r\n                        <div className={`w-4 h-4 rounded ${color} mr-3`}></div>\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"flex justify-between items-center mb-1\">\r\n                            <span className=\"font-medium text-white\">\r\n                              {position.symbol}\r\n                            </span>\r\n                            <span className=\"text-sm text-gray-400\">\r\n                              {percentage.toFixed(1)}%\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"w-full bg-gray-700 rounded-full h-2\">\r\n                            <div\r\n                              className={`${color} h-2 rounded-full`}\r\n                              style={{ width: `${percentage}%` }}\r\n                            ></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"ml-4 text-right\">\r\n                        <div className=\"text-sm font-medium\">\r\n                          ₩{formatCurrency(position.totalValue, \"KRW\")}\r\n                        </div>\r\n                        <div\r\n                          className={`text-xs ${\r\n                            position.returnRate >= 0\r\n                              ? \"text-green-400\"\r\n                              : \"text-red-400\"\r\n                          }`}\r\n                        >\r\n                          {position.returnRate >= 0 ? \"+\" : \"\"}\r\n                          {position.returnRate.toFixed(2)}%\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 오른쪽: 포지션 목록 */}\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-gray-800 rounded-lg p-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-bold\">통합 포지션 목록</h2>\r\n\r\n              {/* 정렬 버튼 */}\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => handleSort(\"symbol\")}\r\n                  className={`px-3 py-1 rounded text-xs ${\r\n                    sortBy === \"symbol\"\r\n                      ? \"bg-blue-500 text-white\"\r\n                      : \"bg-gray-700 text-gray-300 hover:bg-gray-600\"\r\n                  }`}\r\n                >\r\n                  티커{\" \"}\r\n                  {sortBy === \"symbol\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleSort(\"value\")}\r\n                  className={`px-3 py-1 rounded text-xs ${\r\n                    sortBy === \"value\"\r\n                      ? \"bg-blue-500 text-white\"\r\n                      : \"bg-gray-700 text-gray-300 hover:bg-gray-600\"\r\n                  }`}\r\n                >\r\n                  금액 {sortBy === \"value\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleSort(\"return\")}\r\n                  className={`px-3 py-1 rounded text-xs ${\r\n                    sortBy === \"return\"\r\n                      ? \"bg-blue-500 text-white\"\r\n                      : \"bg-gray-700 text-gray-300 hover:bg-gray-600\"\r\n                  }`}\r\n                >\r\n                  수익률{\" \"}\r\n                  {sortBy === \"return\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 포지션 목록 */}\r\n            <div className=\"space-y-3\">\r\n              {consolidatedPositions.length === 0 ? (\r\n                <div className=\"text-center py-8 text-gray-400\">\r\n                  등록된 포지션이 없습니다.\r\n                </div>\r\n              ) : (\r\n                consolidatedPositions.map((position) => (\r\n                  <div\r\n                    key={position.symbol}\r\n                    className=\"bg-gray-700 rounded-lg p-4\"\r\n                  >\r\n                    {/* 메인 정보 */}\r\n                    <div className=\"flex justify-between items-start mb-3\">\r\n                      <div>\r\n                        <h3 className=\"text-lg font-bold text-white\">\r\n                          {position.symbol}\r\n                        </h3>\r\n                        <p className=\"text-sm text-gray-400\">{position.name}</p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"text-lg font-bold text-blue-400\">\r\n                          ₩{formatCurrency(position.totalValue, \"KRW\")}\r\n                        </p>\r\n                        <p\r\n                          className={`text-sm font-semibold ${\r\n                            position.returnRate >= 0\r\n                              ? \"text-green-400\"\r\n                              : \"text-red-400\"\r\n                          }`}\r\n                        >\r\n                          {position.returnRate >= 0 ? \"+\" : \"\"}\r\n                          {position.returnRate.toFixed(2)}%\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* 상세 정보 */}\r\n                    <div className=\"grid grid-cols-2 gap-2 text-xs text-gray-300 mb-3\">\r\n                      <div>\r\n                        수량: {position.totalQuantity.toLocaleString()}주\r\n                      </div>\r\n                      <div>\r\n                        평균단가: ₩\r\n                        {formatCurrency(position.weightedAvgPrice, \"KRW\")}\r\n                      </div>\r\n                      <div>\r\n                        현재가: ₩{formatCurrency(position.currentPrice, \"KRW\")}\r\n                      </div>\r\n                      <div>\r\n                        투자금액: ₩{formatCurrency(position.totalCost, \"KRW\")}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* 포트폴리오별 분산 */}\r\n                    <div className=\"mb-3\">\r\n                      <h4 className=\"text-xs font-medium text-gray-400 mb-2\">\r\n                        포트폴리오별 분산\r\n                      </h4>\r\n                      <div className=\"space-y-1\">\r\n                        {position.positions.map((pos, idx) => {\r\n                          const positionValue = pos.quantity * pos.currentPrice;\r\n                          const percentage =\r\n                            (positionValue / position.totalValue) * 100;\r\n                          return (\r\n                            <div\r\n                              key={idx}\r\n                              className=\"flex items-center text-xs\"\r\n                            >\r\n                              <div className=\"w-20 text-gray-400 truncate\">\r\n                                {pos.portfolioName}\r\n                              </div>\r\n                              <div className=\"flex-1 mx-2\">\r\n                                <div className=\"w-full bg-gray-600 rounded-full h-1\">\r\n                                  <div\r\n                                    className=\"bg-blue-400 h-1 rounded-full\"\r\n                                    style={{ width: `${percentage}%` }}\r\n                                  ></div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"w-12 text-right text-gray-300\">\r\n                                {percentage.toFixed(0)}%\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* 세부 포지션 목록 */}\r\n                    <details className=\"text-xs\">\r\n                      <summary className=\"cursor-pointer text-blue-400 hover:text-blue-300\">\r\n                        세부 포지션 ({position.positions.length}개)\r\n                      </summary>\r\n                      <div className=\"mt-2 space-y-1\">\r\n                        {position.positions.map((pos, idx) => (\r\n                          <div\r\n                            key={idx}\r\n                            className=\"flex justify-between items-center py-1 px-2 bg-gray-600 rounded\"\r\n                          >\r\n                            <div>\r\n                              <span className=\"font-medium\">\r\n                                {pos.portfolioName}\r\n                              </span>\r\n                              <span className=\"text-gray-400 ml-1\">\r\n                                ({pos.accountName})\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <div>\r\n                                {pos.quantity}주 × ₩\r\n                                {formatCurrency(pos.avgPrice, \"KRW\")}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </details>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["ConsolidatedView","consolidatedPositions","setConsolidatedPositions","useState","loading","setLoading","sortBy","setSortBy","sortOrder","setSortOrder","useEffect","loadConsolidatedData","length","sortedPositions","sort","a","b","compareValue","symbol","localeCompare","totalValue","returnRate","async","portfolios","accounts","Promise","all","PortfolioService","getAll","AccountService","allPositions","portfolio","portfolioWithPositions","getWithPositions","id","account","find","accountId","positions","forEach","position","push","portfolioName","name","accountName","currency","consolidatedMap","Map","key","has","set","totalQuantity","weightedAvgPrice","currentPrice","totalCost","unrealizedPnL","consolidated","get","positionCost","quantity","avgPrice","positionValue","initialPositions","Array","from","values","error","handleSort","newSortBy","getTotalPortfolioValue","reduce","sum","pos","getTotalUnrealizedPnL","getOverallReturnRate","totalPnL","jsx","className","children","LoadingSpinner","jsxs","formatCurrency","Math","abs","toFixed","map","index","percentage","colors","color","style","width","onClick","toLocaleString","idx"],"mappings":"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"}