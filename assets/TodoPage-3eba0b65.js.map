{"version":3,"file":"TodoPage-3eba0b65.js","sources":["../../src/services/todoService.ts","../../src/pages/TodoPage.tsx"],"sourcesContent":["import { NewTodo, Todo } from '../types';\nimport { db } from './db';\n\nexport class TodoService {\n  static async getAll(): Promise<Todo[]> {\n    return db.todos.toArray();\n  }\n\n  static async getByPortfolioId(portfolioId: number): Promise<Todo[]> {\n    return db.todos\n      .where('portfolioId')\n      .equals(portfolioId)\n      .toArray();\n  }\n\n  static async create(data: NewTodo): Promise<Todo> {\n    const id = await db.todos.add(data as any);\n    const todo = await db.todos.get(id);\n    if (!todo) throw new Error('할 일 생성에 실패했습니다.');\n    return todo;\n  }\n\n  static async update(id: number, data: Todo): Promise<Todo> {\n    await db.todos.update(id, data);\n    const todo = await db.todos.get(id);\n    if (!todo) throw new Error('할 일 업데이트에 실패했습니다.');\n    return todo;\n  }\n\n  static async delete(id: number): Promise<void> {\n    await db.todos.delete(id);\n  }\n\n  static async toggleDone(id: number): Promise<void> {\n    const todo = await this.getById(id);\n    if (!todo) throw new Error('Todo not found');\n\n    const updatedTodo = {\n      ...todo,\n      completed: !todo.completed,\n      done: !todo.completed,\n      completedAt: !todo.completed ? Date.now() : null\n    };\n\n    await this.update(id, updatedTodo);\n  }\n\n  static async getById(id: number): Promise<Todo | undefined> {\n    return await db.todos.get(id);\n  }\n} ","import { PlusIcon } from \"@heroicons/react/24/outline\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { PortfolioService } from \"../services/portfolioService\";\r\nimport { TodoService } from \"../services/todoService\";\r\nimport { Portfolio, Todo } from \"../types\";\r\n\r\nexport const TodoPage: React.FC = () => {\r\n  const [portfolios, setPortfolios] = useState<Portfolio[]>([]);\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [selectedPortfolio, setSelectedPortfolio] = useState<number | null>(\r\n    null\r\n  );\r\n  const [newTodoText, setNewTodoText] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const [portfoliosData, todosData] = await Promise.all([\r\n        PortfolioService.getAll(),\r\n        TodoService.getAll(),\r\n      ]);\r\n      setPortfolios(portfoliosData);\r\n      setTodos(todosData);\r\n    } catch (error) {\r\n      console.error(\"데이터 로딩 중 오류:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddTodo = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newTodoText.trim() || !selectedPortfolio) return;\r\n\r\n    try {\r\n      const newTodo = await TodoService.create({\r\n        portfolioId: selectedPortfolio,\r\n        text: newTodoText.trim(),\r\n        completed: false,\r\n        createdAt: Date.now(),\r\n        completedAt: null,\r\n      });\r\n      setTodos([...todos, newTodo]);\r\n      setNewTodoText(\"\");\r\n    } catch (error) {\r\n      console.error(\"할 일 추가 중 오류:\", error);\r\n      alert(\"할 일 추가에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = async (todo: Todo) => {\r\n    try {\r\n      const updatedTodo = await TodoService.update(todo.id, {\r\n        ...todo,\r\n        completed: !todo.completed,\r\n        completedAt: !todo.completed ? Date.now() : null,\r\n      });\r\n      setTodos(todos.map((t) => (t.id === todo.id ? updatedTodo : t)));\r\n    } catch (error) {\r\n      console.error(\"할 일 상태 변경 중 오류:\", error);\r\n      alert(\"할 일 상태 변경에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (todoId: number) => {\r\n    if (!window.confirm(\"이 할 일을 삭제하시겠습니까?\")) return;\r\n\r\n    try {\r\n      await TodoService.delete(todoId);\r\n      setTodos(todos.filter((t) => t.id !== todoId));\r\n    } catch (error) {\r\n      console.error(\"할 일 삭제 중 오류:\", error);\r\n      alert(\"할 일 삭제에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const formatDate = (timestamp: number) => {\r\n    return new Intl.DateTimeFormat(\"ko-KR\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    }).format(new Date(timestamp));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <h1 className=\"text-2xl font-bold mb-8\">할 일 목록</h1>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-sm font-medium mb-2\">포트폴리오</label>\r\n          <select\r\n            value={selectedPortfolio || \"\"}\r\n            onChange={(e) =>\r\n              setSelectedPortfolio(\r\n                e.target.value ? Number(e.target.value) : null\r\n              )\r\n            }\r\n            className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"\">포트폴리오 선택</option>\r\n            {portfolios.map((portfolio) => (\r\n              <option key={portfolio.id} value={portfolio.id}>\r\n                {portfolio.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <form onSubmit={handleAddTodo} className=\"mb-8\">\r\n          <div className=\"flex gap-2\">\r\n            <input\r\n              type=\"text\"\r\n              value={newTodoText}\r\n              onChange={(e) => setNewTodoText(e.target.value)}\r\n              className=\"flex-1 px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"새 할 일 추가\"\r\n              disabled={!selectedPortfolio}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              disabled={!selectedPortfolio || !newTodoText.trim()}\r\n            >\r\n              <PlusIcon className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"space-y-4\">\r\n          {todos\r\n            .filter(\r\n              (todo) =>\r\n                !selectedPortfolio || todo.portfolioId === selectedPortfolio\r\n            )\r\n            .sort((a, b) => b.createdAt - a.createdAt)\r\n            .map((todo) => (\r\n              <div key={todo.id} className=\"bg-gray-800 rounded-lg p-4\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => handleToggleTodo(todo)}\r\n                      className=\"h-5 w-5 rounded border-gray-600 text-blue-500 focus:ring-blue-500 focus:ring-offset-gray-800\"\r\n                    />\r\n                    <span\r\n                      className={\r\n                        todo.completed ? \"line-through text-gray-400\" : \"\"\r\n                      }\r\n                    >\r\n                      {todo.text}\r\n                    </span>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => handleDeleteTodo(todo.id)}\r\n                    className=\"text-gray-400 hover:text-red-500\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div className=\"pl-9 space-y-1\">\r\n                  <p className=\"text-sm text-gray-400\">\r\n                    등록: {formatDate(todo.createdAt)}\r\n                  </p>\r\n                  {todo.completedAt && (\r\n                    <p className=\"text-sm text-gray-400\">\r\n                      완료: {formatDate(todo.completedAt)}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        {(!todos.length ||\r\n          (selectedPortfolio &&\r\n            !todos.some((t) => t.portfolioId === selectedPortfolio))) && (\r\n          <div className=\"text-center py-8\">\r\n            <p className=\"text-gray-400\">아직 할 일이 없습니다.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["TodoService","getAll","db","todos","toArray","getByPortfolioId","portfolioId","where","equals","create","data","id","add","todo","get","Error","update","delete","toggleDone","this","getById","updatedTodo","completed","done","completedAt","Date","now","TodoPage","portfolios","setPortfolios","useState","setTodos","selectedPortfolio","setSelectedPortfolio","newTodoText","setNewTodoText","loading","setLoading","useEffect","loadData","async","portfoliosData","todosData","Promise","all","PortfolioService","error","formatDate","timestamp","Intl","DateTimeFormat","year","month","day","hour","minute","format","jsx","className","children","LoadingSpinner","jsxs","value","onChange","e","target","Number","map","portfolio","name","onSubmit","preventDefault","trim","newTodo","text","createdAt","alert","type","placeholder","disabled","PlusIcon","filter","sort","a","b","checked","t","handleToggleTodo","onClick","todoId","window","confirm","handleDeleteTodo","length","some"],"mappings":"wNAGO,MAAMA,EACX,mBAAaC,GACJ,OAAAC,EAAGC,MAAMC,SAClB,CAEA,6BAAaC,CAAiBC,GACrB,OAAAJ,EAAGC,MACPI,MAAM,eACNC,OAAOF,GACPF,SACL,CAEA,mBAAaK,CAAOC,GAClB,MAAMC,QAAWT,EAAGC,MAAMS,IAAIF,GACxBG,QAAaX,EAAGC,MAAMW,IAAIH,GAChC,IAAKE,EAAY,MAAA,IAAIE,MAAM,mBACpB,OAAAF,CACT,CAEA,mBAAaG,CAAOL,EAAYD,SACxBR,EAAGC,MAAMa,OAAOL,EAAID,GAC1B,MAAMG,QAAaX,EAAGC,MAAMW,IAAIH,GAChC,IAAKE,EAAY,MAAA,IAAIE,MAAM,qBACpB,OAAAF,CACT,CAEA,mBAAa,CAAOF,SACZT,EAAGC,MAAMc,OAAON,EACxB,CAEA,uBAAaO,CAAWP,GACtB,MAAME,QAAaM,KAAKC,QAAQT,GAChC,IAAKE,EAAY,MAAA,IAAIE,MAAM,kBAE3B,MAAMM,EAAc,IACfR,EACHS,WAAYT,EAAKS,UACjBC,MAAOV,EAAKS,UACZE,YAAcX,EAAKS,UAAyB,KAAbG,KAAKC,aAGhCP,KAAKH,OAAOL,EAAIU,EACxB,CAEA,oBAAaD,CAAQT,GACnB,aAAaT,EAAGC,MAAMW,IAAIH,EAC5B,EC1CK,MAAMgB,EAAqB,KAChC,MAAOC,EAAYC,GAAiBC,EAAAA,SAAsB,KACnD3B,EAAO4B,GAAYD,EAAAA,SAAiB,KACpCE,EAAmBC,GAAwBH,EAAAA,SAChD,OAEKI,EAAaC,GAAkBL,WAAS,KACxCM,EAASC,GAAcP,YAAS,GAEvCQ,EAAAA,UAAU,KACCC,KACR,IAEH,MAAMA,EAAWC,UACX,IACF,MAAOC,EAAgBC,SAAmBC,QAAQC,IAAI,CACpDC,EAAiB5C,SACjBD,EAAYC,WAEd4B,EAAcY,GACdV,EAASW,SACFI,GAC4B,CACnC,QACAT,GAAW,EACb,GAiDIU,EAAcC,GACX,IAAIC,KAAKC,eAAe,QAAS,CACtCC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,YACPC,OAAO,IAAI/B,KAAKuB,IAGrB,OAAIZ,EAEAqB,EAAAA,IAAC,MAAI,CAAAC,UAAU,8BACbC,SAAAF,EAAAA,IAAC,MAAI,CAAAC,UAAU,wCACbC,SAAAF,EAAAA,IAACG,EAAe,cAOrB,MAAI,CAAAF,UAAU,8BACbC,SAACE,EAAAA,KAAA,MAAA,CAAIH,UAAU,oBACbC,SAAA,CAACF,EAAAA,IAAA,KAAA,CAAGC,UAAU,0BAA0BC,SAAM,WAE9CE,EAAAA,KAAC,MAAI,CAAAH,UAAU,OACbC,SAAA,CAACF,EAAAA,IAAA,QAAA,CAAMC,UAAU,iCAAiCC,SAAK,UACvDE,EAAAA,KAAC,SAAA,CACCC,MAAO9B,GAAqB,GAC5B+B,SAAWC,GACT/B,EACE+B,EAAEC,OAAOH,MAAQI,OAAOF,EAAEC,OAAOH,OAAS,MAG9CJ,UAAU,2FAEVC,SAAA,CAACF,EAAAA,IAAA,SAAA,CAAOK,MAAM,GAAGH,SAAQ,aACxB/B,EAAWuC,IAAKC,GACdX,EAAAA,IAAA,SAAA,CAA0BK,MAAOM,EAAUzD,GACzCgD,SAAAS,EAAUC,MADAD,EAAUzD,WAO7B8C,EAAAA,IAAC,QAAKa,SA3FU9B,MAAOwB,IAE3B,GADAA,EAAEO,iBACGrC,EAAYsC,QAAWxC,EAExB,IACI,MAAAyC,QAAgBzE,EAAYS,OAAO,CACvCH,YAAa0B,EACb0C,KAAMxC,EAAYsC,OAClBlD,WAAW,EACXqD,UAAWlD,KAAKC,MAChBF,YAAa,OAEfO,EAAS,IAAI5B,EAAOsE,IACpBtC,EAAe,UACRW,GAEP8B,MAAM,kBACR,GA0EmClB,UAAU,OACvCC,SAAAE,EAAAA,KAAC,MAAI,CAAAH,UAAU,aACbC,SAAA,CAAAF,EAAAA,IAAC,QAAA,CACCoB,KAAK,OACLf,MAAO5B,EACP6B,SAAWC,GAAM7B,EAAe6B,EAAEC,OAAOH,OACzCJ,UAAU,2FACVoB,YAAY,WACZC,UAAW/C,IAEbyB,EAAAA,IAAC,SAAA,CACCoB,KAAK,SACLnB,UAAU,6GACVqB,UAAW/C,IAAsBE,EAAYsC,OAE7Cb,SAAAF,EAAAA,IAACuB,EAAS,CAAAtB,UAAU,mBAKzBD,EAAAA,IAAA,MAAA,CAAIC,UAAU,YACZC,SACExD,EAAA8E,OACEpE,IACEmB,GAAqBnB,EAAKP,cAAgB0B,GAE9CkD,KAAK,CAACC,EAAGC,IAAMA,EAAET,UAAYQ,EAAER,WAC/BR,IAAKtD,GACHgD,OAAA,MAAA,CAAkBH,UAAU,6BAC3BC,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIH,UAAU,yCACbC,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIH,UAAU,8BACbC,SAAA,CAAAF,EAAAA,IAAC,QAAA,CACCoB,KAAK,WACLQ,QAASxE,EAAKS,UACdyC,SAAU,IAzGLvB,OAAO3B,IAC1B,IACF,MAAMQ,QAAoBrB,EAAYgB,OAAOH,EAAKF,GAAI,IACjDE,EACHS,WAAYT,EAAKS,UACjBE,YAAcX,EAAKS,UAAyB,KAAbG,KAAKC,QAE7BK,EAAA5B,EAAMgE,IAAKmB,GAAOA,EAAE3E,KAAOE,EAAKF,GAAKU,EAAciE,UACrDxC,GAEP8B,MAAM,qBACR,GA8FkCW,CAAiB1E,GACjC6C,UAAU,iGAEZD,EAAAA,IAAC,OAAA,CACCC,UACE7C,EAAKS,UAAY,6BAA+B,GAGjDqC,SAAK9C,EAAA6D,UAGVjB,EAAAA,IAAC,SAAA,CACC+B,QAAS,IAvGFhD,OAAOiD,IAC1B,GAACC,OAAOC,QAAQ,oBAEhB,UACI3F,EAAYiB,OAAOwE,GACzB1D,EAAS5B,EAAM8E,OAAQK,GAAMA,EAAE3E,KAAO8E,UAC/B3C,GAEP8B,MAAM,kBACR,GA8F+BgB,CAAiB/E,EAAKF,IACrC+C,UAAU,mCACXC,SAAA,SAIHE,EAAAA,KAAC,MAAI,CAAAH,UAAU,iBACbC,SAAA,CAACE,EAAAA,KAAA,IAAA,CAAEH,UAAU,wBAAwBC,SAAA,CAAA,OAC9BZ,EAAWlC,EAAK8D,cAEtB9D,EAAKW,aACHqC,OAAA,IAAA,CAAEH,UAAU,wBAAwBC,SAAA,CAAA,OAC9BZ,EAAWlC,EAAKW,qBA9BnBX,EAAKF,SAsClBR,EAAM0F,QACN7D,IACE7B,EAAM2F,KAAMR,GAAMA,EAAEhF,cAAgB0B,KACvCyB,EAAAA,IAAC,OAAIC,UAAU,mBACbC,eAAC,IAAE,CAAAD,UAAU,gBAAgBC,SAAA"}