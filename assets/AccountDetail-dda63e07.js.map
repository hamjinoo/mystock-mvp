{"version":3,"file":"AccountDetail-dda63e07.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/CogIcon.js","../../src/components/CashBalanceCard.tsx","../../src/pages/AccountDetail.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction CogIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4.5 12a7.5 7.5 0 0 0 15 0m-15 0a7.5 7.5 0 1 1 15 0m-15 0H3m16.5 0H21m-1.5 0H12m-8.457 3.077 1.41-.513m14.095-5.13 1.41-.513M5.106 17.785l1.15-.964m11.49-9.642 1.149-.964M7.501 19.795l.75-1.3m7.5-12.99.75-1.3m-6.063 16.658.26-1.477m2.605-14.772.26-1.477m0 17.726-.26-1.477M10.698 4.614l-.26-1.477M16.5 19.794l-.75-1.299M7.5 4.205 12 12m6.894 5.785-1.149-.964M6.256 7.178l-1.15-.964m15.352 8.864-1.41-.513M4.954 9.435l-1.41-.514M12.002 12l-3.75 6.495\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CogIcon);\nexport default ForwardRef;","import { BanknotesIcon, ChartBarIcon, CurrencyDollarIcon } from '@heroicons/react/24/outline';\nimport React from 'react';\nimport { formatCurrency } from '../utils/currencyUtils';\n\ninterface CashBalanceData {\n  totalBalance: number;\n  cashBalance: number;\n  investedAmount: number;\n  currentValue: number;\n  utilizationRate: number;\n  profitLoss: number;\n  profitLossRate: number;\n}\n\ninterface Props {\n  cashBalance: CashBalanceData;\n  currency: 'KRW' | 'USD';\n  className?: string;\n}\n\nexport const CashBalanceCard: React.FC<Props> = ({ \n  cashBalance, \n  currency, \n  className = '' \n}) => {\n  const {\n    totalBalance,\n    cashBalance: cash,\n    investedAmount,\n    currentValue,\n    utilizationRate,\n    profitLoss,\n    profitLossRate,\n  } = cashBalance;\n\n  return (\n    <div className={`bg-gray-800 rounded-lg p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-bold text-white\">자금 현황</h3>\n        <div className=\"flex items-center text-sm text-gray-400\">\n          <ChartBarIcon className=\"h-4 w-4 mr-1\" />\n          활용률 {utilizationRate.toFixed(1)}%\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n        {/* 총 잔고 */}\n        <div className=\"bg-gray-700 p-4 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <BanknotesIcon className=\"h-5 w-5 text-blue-400 mr-2\" />\n            <span className=\"text-sm text-gray-400\">총 잔고</span>\n          </div>\n          <p className=\"text-xl font-bold text-white\">\n            {formatCurrency(totalBalance, currency)}\n          </p>\n        </div>\n\n        {/* 현금 잔고 */}\n        <div className=\"bg-gray-700 p-4 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <CurrencyDollarIcon className=\"h-5 w-5 text-green-400 mr-2\" />\n            <span className=\"text-sm text-gray-400\">사용 가능 현금</span>\n          </div>\n          <p className=\"text-xl font-bold text-green-400\">\n            {formatCurrency(cash, currency)}\n          </p>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            {totalBalance > 0 ? ((cash / totalBalance) * 100).toFixed(1) : 0}%\n          </p>\n        </div>\n\n        {/* 투자 중인 금액 */}\n        <div className=\"bg-gray-700 p-4 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <ChartBarIcon className=\"h-5 w-5 text-purple-400 mr-2\" />\n            <span className=\"text-sm text-gray-400\">투자 중</span>\n          </div>\n          <p className=\"text-xl font-bold text-purple-400\">\n            {formatCurrency(investedAmount, currency)}\n          </p>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            {totalBalance > 0 ? ((investedAmount / totalBalance) * 100).toFixed(1) : 0}%\n          </p>\n        </div>\n      </div>\n\n      {/* 수익/손실 현황 */}\n      <div className=\"bg-gray-700 p-4 rounded-lg\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-sm text-gray-400\">투자 성과</span>\n          <span className={`text-sm font-medium ${\n            profitLoss >= 0 ? 'text-green-400' : 'text-red-400'\n          }`}>\n            {profitLoss >= 0 ? '+' : ''}{profitLossRate.toFixed(2)}%\n          </span>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-gray-400\">평가 금액</p>\n            <p className=\"text-lg font-bold text-white\">\n              {formatCurrency(currentValue, currency)}\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"text-sm text-gray-400\">손익</p>\n            <p className={`text-lg font-bold ${\n              profitLoss >= 0 ? 'text-green-400' : 'text-red-400'\n            }`}>\n              {profitLoss >= 0 ? '+' : ''}{formatCurrency(profitLoss, currency)}\n            </p>\n          </div>\n        </div>\n\n        {/* 진행률 바 */}\n        <div className=\"mt-3\">\n          <div className=\"w-full bg-gray-600 rounded-full h-2\">\n            <div \n              className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${Math.min(utilizationRate, 100)}%` }}\n            ></div>\n          </div>\n          <div className=\"flex justify-between text-xs text-gray-400 mt-1\">\n            <span>자금 활용률</span>\n            <span>{utilizationRate.toFixed(1)}%</span>\n          </div>\n        </div>\n      </div>\n\n      {/* 경고 메시지 */}\n      {cash < 0 && (\n        <div className=\"mt-4 p-3 bg-red-900/30 border border-red-500/50 rounded-lg\">\n          <p className=\"text-red-400 text-sm\">\n            ⚠️ 현금 잔고가 부족합니다. 계좌 잔고를 확인해주세요.\n          </p>\n        </div>\n      )}\n\n      {utilizationRate > 90 && (\n        <div className=\"mt-4 p-3 bg-yellow-900/30 border border-yellow-500/50 rounded-lg\">\n          <p className=\"text-yellow-400 text-sm\">\n            💡 자금 활용률이 높습니다. 추가 투자 시 신중하게 검토해주세요.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}; ","import {\r\n    ArrowLeftIcon,\r\n    CogIcon,\r\n    PencilIcon,\r\n    PlusIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { CashBalanceCard } from \"../components/CashBalanceCard\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { AccountService } from \"../services/accountService\";\r\nimport { PortfolioService } from \"../services/portfolioService\";\r\nimport { Account, Portfolio, Position } from \"../types\";\r\nimport { formatCurrency } from \"../utils/currencyUtils\";\r\n\r\ninterface AccountSummary {\r\n  account: Account;\r\n  portfolios: (Portfolio & { positions: Position[] })[];\r\n  totalValue: number;\r\n  totalCost: number;\r\n  returnRate: number;\r\n}\r\n\r\nexport const AccountDetailPage: React.FC = () => {\r\n  const { accountId } = useParams<{ accountId: string }>();\r\n  const navigate = useNavigate();\r\n  const [account, setAccount] = useState<\r\n    Account & { portfolios: (Portfolio & { positions: Position[] })[] }\r\n  >();\r\n  const [summary, setSummary] = useState<AccountSummary>();\r\n  const [cashBalance, setCashBalance] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showBalanceModal, setShowBalanceModal] = useState(false);\r\n  const [newBalance, setNewBalance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [accountId]);\r\n\r\n  const loadData = async () => {\r\n    if (!accountId) return;\r\n\r\n    try {\r\n      const [accountData, summaryData, cashData] = await Promise.all([\r\n        AccountService.getWithPortfolios(Number(accountId)),\r\n        AccountService.getAccountSummary(Number(accountId)),\r\n        AccountService.getCashBalance(Number(accountId)),\r\n      ]);\r\n\r\n      setAccount(accountData);\r\n      setSummary(summaryData);\r\n      setCashBalance(cashData);\r\n      setNewBalance(accountData.totalBalance || 0);\r\n    } catch (error) {\r\n      console.error(\"계좌 정보 로딩 중 오류:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeletePosition = async (positionId: number) => {\r\n    if (!window.confirm(\"정말 이 포지션을 삭제하시겠습니까?\")) return;\r\n\r\n    try {\r\n      await PortfolioService.deletePosition(positionId);\r\n      loadData(); // 데이터 새로고침\r\n    } catch (error) {\r\n      console.error(\"포지션 삭제 중 오류:\", error);\r\n      alert(\"포지션 삭제에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateBalance = async () => {\r\n    if (!accountId) return;\r\n\r\n    try {\r\n      await AccountService.updateAccountBalance(Number(accountId), newBalance);\r\n      setShowBalanceModal(false);\r\n      loadData(); // 데이터 새로고침\r\n    } catch (error) {\r\n      console.error(\"계좌 잔고 업데이트 중 오류:\", error);\r\n      alert(\"계좌 잔고 업데이트에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!account || !summary) {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-400\">계좌를 찾을 수 없습니다.</p>\r\n          <Link\r\n            to=\"/accounts\"\r\n            className=\"inline-block mt-4 text-blue-500 hover:text-blue-400\"\r\n          >\r\n            계좌 목록으로 돌아가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 모든 포지션을 하나의 배열로 합치기\r\n  const allPositions = summary.portfolios.flatMap((portfolio) =>\r\n    portfolio.positions.map((position) => ({\r\n      ...position,\r\n      portfolioId: portfolio.id,\r\n    }))\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <button\r\n            onClick={() => navigate(\"/accounts\")}\r\n            className=\"text-sm text-gray-400 hover:text-white flex items-center\"\r\n          >\r\n            <ArrowLeftIcon className=\"h-4 w-4 mr-1\" />\r\n            뒤로\r\n          </button>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={() => setShowBalanceModal(true)}\r\n              className=\"text-sm text-gray-400 hover:text-white flex items-center\"\r\n            >\r\n              <CogIcon className=\"h-4 w-4 mr-1\" />\r\n              잔고 설정\r\n            </button>\r\n            <Link\r\n              to={`/accounts/${accountId}/edit`}\r\n              className=\"text-sm text-gray-400 hover:text-white flex items-center\"\r\n            >\r\n              <PencilIcon className=\"h-4 w-4 mr-1\" />\r\n              수정\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">\r\n            {summary.account.accountName}\r\n          </h1>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">증권사</p>\r\n              <p className=\"font-medium\">{summary.account.broker}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">계좌번호</p>\r\n              <p className=\"font-medium\">{summary.account.accountNumber}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">총자산</p>\r\n              <p className=\"font-medium\">\r\n                {formatCurrency(summary.totalValue, summary.account.currency)}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">수익률</p>\r\n              <p\r\n                className={`font-medium ${\r\n                  summary.returnRate >= 0 ? \"text-green-400\" : \"text-red-400\"\r\n                }`}\r\n              >\r\n                {summary.returnRate.toFixed(2)}%\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 현금 잔고 카드 */}\r\n        {cashBalance && (\r\n          <CashBalanceCard \r\n            cashBalance={cashBalance}\r\n            currency={summary.account.currency}\r\n            className=\"mb-6\"\r\n          />\r\n        )}\r\n\r\n        {/* 잔고 설정 모달 */}\r\n        {showBalanceModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-md\">\r\n              <h3 className=\"text-lg font-bold mb-4\">계좌 잔고 설정</h3>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">\r\n                  총 계좌 잔고 ({summary.account.currency})\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={newBalance}\r\n                  onChange={(e) => setNewBalance(Number(e.target.value))}\r\n                  className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  min=\"0\"\r\n                  step=\"1000\"\r\n                />\r\n                <p className=\"text-xs text-gray-400 mt-1\">\r\n                  현재 투자 중인 금액: {formatCurrency(summary.totalCost, summary.account.currency)}\r\n                </p>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  onClick={() => setShowBalanceModal(false)}\r\n                  className=\"px-4 py-2 text-gray-400 hover:text-white\"\r\n                >\r\n                  취소\r\n                </button>\r\n                <button\r\n                  onClick={handleUpdateBalance}\r\n                  className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                >\r\n                  저장\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"space-y-6\">\r\n          <div>\r\n            <div className=\"overflow-x-auto\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h2 className=\"text-xl font-bold\">보유 종목</h2>\r\n                <Link\r\n                  to={`/accounts/${accountId}/positions/new`}\r\n                  className=\"inline-flex items-center px-3 py-2 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                >\r\n                  <PlusIcon className=\"h-4 w-4 mr-1\" />새 종목 추가\r\n                </Link>\r\n              </div>\r\n              <table className=\"w-full\">\r\n                <thead>\r\n                  <tr className=\"text-left text-sm text-gray-400\">\r\n                    <th className=\"p-2\">종목</th>\r\n                    <th className=\"p-2\">포트폴리오</th>\r\n                    <th className=\"p-2 text-right\">수량</th>\r\n                    <th className=\"p-2 text-right\">평균단가</th>\r\n                    <th className=\"p-2 text-right\">현재가</th>\r\n                    <th className=\"p-2 text-right\">평가금액</th>\r\n                    <th className=\"p-2 text-right\">비중</th>\r\n                    <th className=\"p-2 text-right\">수익률</th>\r\n                    <th className=\"p-2\"></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {allPositions.map((position) => {\r\n                    const returnRate =\r\n                      ((position.currentPrice - position.avgPrice) /\r\n                        position.avgPrice) *\r\n                      100;\r\n                    const totalValue =\r\n                      position.quantity * position.currentPrice;\r\n                    const percentage = (totalValue / summary.totalValue) * 100;\r\n                    const portfolio = summary.portfolios.find(\r\n                      (p) => p.id === position.portfolioId\r\n                    );\r\n\r\n                    return (\r\n                      <tr\r\n                        key={position.id}\r\n                        className=\"border-t border-gray-700\"\r\n                      >\r\n                        <td className=\"p-2\">\r\n                          <div>\r\n                            <div className=\"font-medium\">{position.symbol}</div>\r\n                            <div className=\"text-sm text-gray-400\">\r\n                              {position.name}\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"p-2\">\r\n                          {portfolio && (\r\n                            <Link\r\n                              to={`/portfolios/${portfolio.id}`}\r\n                              className=\"text-blue-500 hover:text-blue-400\"\r\n                            >\r\n                              <div className=\"text-sm\">\r\n                                <div>{portfolio.name}</div>\r\n                                <div className=\"text-xs text-gray-400\">\r\n                                  {portfolio.config?.period || \"미분류\"}\r\n                                </div>\r\n                              </div>\r\n                            </Link>\r\n                          )}\r\n                        </td>\r\n                        <td className=\"p-2 text-right\">\r\n                          {position.quantity.toLocaleString()}\r\n                        </td>\r\n                        <td className=\"p-2 text-right\">\r\n                          {formatCurrency(\r\n                            position.avgPrice,\r\n                            summary.account.currency\r\n                          )}\r\n                        </td>\r\n                        <td className=\"p-2 text-right\">\r\n                          {formatCurrency(\r\n                            position.currentPrice,\r\n                            summary.account.currency\r\n                          )}\r\n                        </td>\r\n                        <td className=\"p-2 text-right\">\r\n                          {formatCurrency(totalValue, summary.account.currency)}\r\n                        </td>\r\n                        <td className=\"p-2 text-right\">\r\n                          {percentage.toFixed(2)}%\r\n                        </td>\r\n                        <td className=\"p-2 text-right\">\r\n                          <span\r\n                            className={\r\n                              returnRate >= 0\r\n                                ? \"text-green-400\"\r\n                                : \"text-red-400\"\r\n                            }\r\n                          >\r\n                            {returnRate.toFixed(2)}%\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"p-2 text-right\">\r\n                          <div className=\"flex justify-end space-x-2\">\r\n                            <Link\r\n                              to={`/accounts/${accountId}/positions/${position.id}/edit`}\r\n                              className=\"text-gray-400 hover:text-white\"\r\n                            >\r\n                              <PencilIcon className=\"h-4 w-4\" />\r\n                            </Link>\r\n                            <button\r\n                              onClick={() => handleDeletePosition(position.id)}\r\n                              className=\"text-gray-400 hover:text-red-500\"\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["CogIcon","title","titleId","props","svgRef","React.createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","CogIcon$1","React.forwardRef","CashBalanceCard","cashBalance","currency","className","totalBalance","cash","investedAmount","currentValue","utilizationRate","profitLoss","profitLossRate","jsxs","children","jsx","ChartBarIcon","toFixed","BanknotesIcon","formatCurrency","CurrencyDollarIcon","style","width","Math","min","AccountDetailPage","accountId","useParams","navigate","useNavigate","account","setAccount","useState","summary","setSummary","setCashBalance","loading","setLoading","showBalanceModal","setShowBalanceModal","newBalance","setNewBalance","useEffect","loadData","async","accountData","summaryData","cashData","Promise","all","AccountService","getWithPortfolios","Number","getAccountSummary","getCashBalance","error","LoadingSpinner","Link","to","allPositions","portfolios","flatMap","portfolio","positions","map","position","portfolioId","onClick","ArrowLeftIcon","PencilIcon","accountName","broker","accountNumber","totalValue","returnRate","type","value","onChange","e","target","step","totalCost","updateAccountBalance","alert","PlusIcon","currentPrice","avgPrice","quantity","percentage","find","p","symbol","name","config","period","toLocaleString","positionId","window","confirm","PortfolioService","deletePosition","handleDeletePosition"],"mappings":"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","x_google_ignoreList":[0]}