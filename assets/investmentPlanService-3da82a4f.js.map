{"version":3,"file":"investmentPlanService-3da82a4f.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ExclamationCircleIcon.js","../../node_modules/@heroicons/react/24/outline/esm/PlayIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ScaleIcon.js","../../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../../node_modules/@heroicons/react/24/outline/esm/XMarkIcon.js","../../src/components/InvestmentWarningModal.tsx","../../src/components/ExecuteEntryModal.tsx","../../src/services/investmentPlanService.ts"],"sourcesContent":["import * as React from \"react\";\nfunction ExclamationCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlayIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlayIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ScaleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3v17.25m0 0c-1.472 0-2.882.265-4.185.75M12 20.25c1.472 0 2.882.265 4.185.75M18.75 4.97A48.416 48.416 0 0 0 12 4.5c-2.291 0-4.545.16-6.75.47m13.5 0c1.01.143 2.01.317 3 .52m-3-.52 2.62 10.726c.122.499-.106 1.028-.589 1.202a5.988 5.988 0 0 1-2.031.352 5.988 5.988 0 0 1-2.031-.352c-.483-.174-.711-.703-.59-1.202L18.75 4.971Zm-16.5.52c.99-.203 1.99-.377 3-.52m0 0 2.62 10.726c.122.499-.106 1.028-.589 1.202a5.989 5.989 0 0 1-2.031.352 5.989 5.989 0 0 1-2.031-.352c-.483-.174-.711-.703-.59-1.202L5.25 4.971Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ScaleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XMarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 18 18 6M6 6l12 12\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XMarkIcon);\nexport default ForwardRef;","import {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ExclamationTriangleIcon,\n    ShieldCheckIcon,\n    XCircleIcon,\n    XMarkIcon\n} from '@heroicons/react/24/outline';\nimport React, { useState } from 'react';\nimport { ChecklistItem, InvestmentChecklist, RiskWarning } from '../types';\nimport { formatCurrency } from '../utils/currencyUtils';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onProceed: (overrideReason?: string) => void;\n  checklist: InvestmentChecklist | null;\n  currency: 'KRW' | 'USD';\n}\n\nexport const InvestmentWarningModal: React.FC<Props> = ({\n  isOpen,\n  onClose,\n  onProceed,\n  checklist,\n  currency,\n}) => {\n  const [showOverrideForm, setShowOverrideForm] = useState(false);\n  const [overrideReason, setOverrideReason] = useState('');\n\n  if (!isOpen || !checklist) return null;\n\n  const handleProceed = () => {\n    if (checklist.canProceed) {\n      onProceed();\n    } else {\n      setShowOverrideForm(true);\n    }\n  };\n\n  const handleOverride = () => {\n    if (overrideReason.trim()) {\n      onProceed(overrideReason);\n      setShowOverrideForm(false);\n      setOverrideReason('');\n    }\n  };\n\n  const getStatusIcon = (status: ChecklistItem['status']) => {\n    switch (status) {\n      case 'PASS':\n        return <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />;\n      case 'WARNING':\n        return <ExclamationCircleIcon className=\"h-5 w-5 text-yellow-400\" />;\n      case 'FAIL':\n        return <XCircleIcon className=\"h-5 w-5 text-red-400\" />;\n    }\n  };\n\n  const getStatusColor = (status: ChecklistItem['status']) => {\n    switch (status) {\n      case 'PASS':\n        return 'border-green-500/30 bg-green-900/10';\n      case 'WARNING':\n        return 'border-yellow-500/30 bg-yellow-900/10';\n      case 'FAIL':\n        return 'border-red-500/30 bg-red-900/10';\n    }\n  };\n\n  const getRiskColor = (risk: 'HIGH' | 'MEDIUM' | 'LOW') => {\n    switch (risk) {\n      case 'HIGH':\n        return 'text-red-400 bg-red-900/20 border-red-500/30';\n      case 'MEDIUM':\n        return 'text-yellow-400 bg-yellow-900/20 border-yellow-500/30';\n      case 'LOW':\n        return 'text-green-400 bg-green-900/20 border-green-500/30';\n    }\n  };\n\n  const getWarningTypeIcon = (type: RiskWarning['type']) => {\n    switch (type) {\n      case 'HIGH':\n        return <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400\" />;\n      case 'MEDIUM':\n        return <ExclamationCircleIcon className=\"h-5 w-5 text-yellow-400\" />;\n      case 'LOW':\n        return <ExclamationCircleIcon className=\"h-5 w-5 text-blue-400\" />;\n    }\n  };\n\n  const passedChecks = checklist.checks.filter(check => check.status === 'PASS').length;\n  const totalChecks = checklist.checks.length;\n  const warningChecks = checklist.checks.filter(check => check.status === 'WARNING').length;\n  const failedChecks = checklist.checks.filter(check => check.status === 'FAIL').length;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-4xl mx-4 max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center\">\n            <ShieldCheckIcon className=\"h-6 w-6 mr-2 text-blue-400\" />\n            <h3 className=\"text-xl font-bold text-white\">투자 전 안전 점검</h3>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-300\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* 투자 정보 요약 */}\n        <div className=\"bg-gray-700 rounded-lg p-4 mb-6\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-400\">종목:</span>\n              <span className=\"ml-2 font-medium text-white\">{checklist.symbol}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">투자 금액:</span>\n              <span className=\"ml-2 font-medium text-white\">\n                {formatCurrency(checklist.plannedAmount, currency)}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">전체 위험도:</span>\n              <span className={`ml-2 px-2 py-1 rounded text-xs font-medium border ${getRiskColor(checklist.overallRisk)}`}>\n                {checklist.overallRisk === 'HIGH' ? '높음' : \n                 checklist.overallRisk === 'MEDIUM' ? '보통' : '낮음'}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">진행 가능:</span>\n              <span className={`ml-2 font-medium ${checklist.canProceed ? 'text-green-400' : 'text-red-400'}`}>\n                {checklist.canProceed ? '예' : '아니오'}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* 점검 결과 요약 */}\n        <div className=\"bg-gray-700 rounded-lg p-4 mb-6\">\n          <h4 className=\"font-medium text-white mb-3\">점검 결과 요약</h4>\n          <div className=\"grid grid-cols-3 gap-4 text-center\">\n            <div className=\"flex flex-col items-center\">\n              <CheckCircleIcon className=\"h-8 w-8 text-green-400 mb-1\" />\n              <span className=\"text-2xl font-bold text-green-400\">{passedChecks}</span>\n              <span className=\"text-xs text-gray-400\">통과</span>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <ExclamationCircleIcon className=\"h-8 w-8 text-yellow-400 mb-1\" />\n              <span className=\"text-2xl font-bold text-yellow-400\">{warningChecks}</span>\n              <span className=\"text-xs text-gray-400\">경고</span>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <XCircleIcon className=\"h-8 w-8 text-red-400 mb-1\" />\n              <span className=\"text-2xl font-bold text-red-400\">{failedChecks}</span>\n              <span className=\"text-xs text-gray-400\">실패</span>\n            </div>\n          </div>\n          <div className=\"mt-3 text-center text-sm text-gray-400\">\n            총 {totalChecks}개 항목 중 {passedChecks}개 통과\n          </div>\n        </div>\n\n        {/* 상세 체크리스트 */}\n        <div className=\"mb-6\">\n          <h4 className=\"font-medium text-white mb-4\">상세 점검 항목</h4>\n          <div className=\"space-y-3\">\n            {checklist.checks.map((check) => (\n              <div\n                key={check.id}\n                className={`p-4 rounded-lg border ${getStatusColor(check.status)}`}\n              >\n                <div className=\"flex items-start justify-between mb-2\">\n                  <div className=\"flex items-center\">\n                    {getStatusIcon(check.status)}\n                    <span className=\"ml-2 font-medium text-white\">{check.title}</span>\n                    {check.isBlocking && check.status === 'FAIL' && (\n                      <span className=\"ml-2 px-2 py-1 bg-red-600 text-white text-xs rounded\">\n                        차단\n                      </span>\n                    )}\n                  </div>\n                  <span className=\"text-xs text-gray-400 capitalize\">\n                    {check.category.toLowerCase()}\n                  </span>\n                </div>\n                <p className=\"text-sm text-gray-300 mb-2\">{check.message}</p>\n                {check.recommendation && (\n                  <p className=\"text-xs text-gray-400 italic\">\n                    💡 {check.recommendation}\n                  </p>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 위험 경고 */}\n        {checklist.warnings.length > 0 && (\n          <div className=\"mb-6\">\n            <h4 className=\"font-medium text-white mb-4 flex items-center\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 mr-2 text-yellow-400\" />\n              위험 경고\n            </h4>\n            <div className=\"space-y-3\">\n              {checklist.warnings.map((warning) => (\n                <div\n                  key={warning.id}\n                  className=\"p-4 rounded-lg border border-yellow-500/30 bg-yellow-900/10\"\n                >\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div className=\"flex items-center\">\n                      {getWarningTypeIcon(warning.type)}\n                      <span className=\"ml-2 font-medium text-white\">{warning.title}</span>\n                    </div>\n                    <span className=\"text-xs text-gray-400 capitalize\">\n                      {warning.category.toLowerCase()}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-300 mb-2\">{warning.message}</p>\n                  <p className=\"text-xs text-gray-400 italic\">\n                    💡 {warning.recommendation}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* 강제 진행 폼 */}\n        {showOverrideForm && (\n          <div className=\"mb-6 p-4 bg-red-900/20 border border-red-500/30 rounded-lg\">\n            <h4 className=\"font-medium text-red-400 mb-3 flex items-center\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 mr-2\" />\n              위험 경고 무시하고 진행\n            </h4>\n            <p className=\"text-sm text-gray-300 mb-4\">\n              안전 점검에서 실패한 항목이 있습니다. 그래도 진행하시려면 이유를 입력해주세요.\n            </p>\n            <textarea\n              value={overrideReason}\n              onChange={(e) => setOverrideReason(e.target.value)}\n              className=\"w-full px-3 py-2 bg-gray-700 text-white rounded focus:outline-none focus:ring-2 focus:ring-red-500\"\n              rows={3}\n              placeholder=\"위험을 감수하고 진행하는 이유를 입력하세요...\"\n              required\n            />\n            <div className=\"flex justify-end gap-2 mt-3\">\n              <button\n                onClick={() => setShowOverrideForm(false)}\n                className=\"px-4 py-2 text-gray-400 hover:text-gray-300\"\n              >\n                취소\n              </button>\n              <button\n                onClick={handleOverride}\n                disabled={!overrideReason.trim()}\n                className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                강제 진행\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* 액션 버튼들 */}\n        <div className=\"flex justify-end gap-3 pt-4 border-t border-gray-700\">\n          <button\n            onClick={onClose}\n            className=\"px-6 py-2 text-gray-400 hover:text-gray-300\"\n          >\n            취소\n          </button>\n          \n          {checklist.canProceed ? (\n            <button\n              onClick={handleProceed}\n              className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 flex items-center\"\n            >\n              <CheckCircleIcon className=\"h-5 w-5 mr-1\" />\n              안전하게 진행\n            </button>\n          ) : (\n            <button\n              onClick={handleProceed}\n              className=\"px-6 py-2 bg-red-600 text-white rounded hover:bg-red-700 flex items-center\"\n            >\n              <ExclamationTriangleIcon className=\"h-5 w-5 mr-1\" />\n              위험 감수하고 진행\n            </button>\n          )}\n        </div>\n\n        {/* 안전 팁 */}\n        <div className=\"mt-4 p-3 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\n          <p className=\"text-xs text-blue-300\">\n            💡 <strong>안전 투자 팁:</strong> 위험 경고가 있을 때는 투자 금액을 줄이거나 시기를 조정하는 것이 좋습니다. \n            감정적인 결정보다는 체계적인 접근을 권장합니다.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}; ","import { CurrencyDollarIcon, PlayIcon, ScaleIcon, ShieldCheckIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport React, { useEffect, useState } from 'react';\nimport { AccountService } from '../services/accountService';\nimport { RiskManagementService } from '../services/riskManagementService';\nimport { InvestmentChecklist, InvestmentEntry, InvestmentPlan } from '../types';\nimport { formatCurrency } from '../utils/currencyUtils';\nimport { InvestmentWarningModal } from './InvestmentWarningModal';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (executionData: { quantity: number; price: number }, overrideReason?: string) => void;\n  entry: InvestmentEntry | null;\n  plan: InvestmentPlan | null;\n  currency: 'KRW' | 'USD';\n}\n\nexport const ExecuteEntryModal: React.FC<Props> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  entry,\n  plan,\n  currency,\n}) => {\n  const [quantity, setQuantity] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [cashBalance, setCashBalance] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [checklist, setChecklist] = useState<InvestmentChecklist | null>(null);\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const [checkingRisk, setCheckingRisk] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && plan) {\n      loadCashBalance();\n      // 기본값 설정\n      if (entry && price === 0) {\n        const suggestedQuantity = Math.floor(entry.plannedAmount / (price || 1));\n        setQuantity(suggestedQuantity);\n      }\n    }\n  }, [isOpen, plan, entry, price]);\n\n  const loadCashBalance = async () => {\n    if (!plan) return;\n    \n    try {\n      const balance = await AccountService.getCashBalance(plan.portfolioId);\n      setCashBalance(balance);\n    } catch (error) {\n      console.error('현금 잔고 조회 중 오류:', error);\n    }\n  };\n\n  const checkInvestmentRisk = async () => {\n    if (!plan || !entry || quantity <= 0 || price <= 0) return;\n\n    setCheckingRisk(true);\n    try {\n      const totalAmount = quantity * price;\n      const checklistResult = await RiskManagementService.createInvestmentChecklist(\n        plan.portfolioId,\n        plan.symbol,\n        totalAmount\n      );\n      \n      setChecklist(checklistResult);\n      \n      // 위험이 있거나 경고가 있으면 경고 모달 표시\n      if (!checklistResult.canProceed || checklistResult.warnings.length > 0) {\n        setShowWarningModal(true);\n      } else {\n        // 안전하면 바로 실행\n        handleDirectSubmit();\n      }\n    } catch (error) {\n      console.error('위험 분석 중 오류:', error);\n      // 위험 분석 실패 시에도 실행 허용 (fallback)\n      handleDirectSubmit();\n    } finally {\n      setCheckingRisk(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!entry || !plan || quantity <= 0 || price <= 0) {\n      alert('수량과 가격을 올바르게 입력해주세요.');\n      return;\n    }\n\n    const totalAmount = quantity * price;\n    \n    if (cashBalance && totalAmount > cashBalance.cashBalance) {\n      const confirmMessage = `현금 잔고(${formatCurrency(cashBalance.cashBalance, currency)})가 부족합니다. 계속하시겠습니까?`;\n      if (!window.confirm(confirmMessage)) {\n        return;\n      }\n    }\n\n    // 위험 관리 체크 실행\n    await checkInvestmentRisk();\n  };\n\n  const handleDirectSubmit = async () => {\n    setLoading(true);\n    try {\n      await onSubmit({ quantity, price });\n      onClose();\n      \n      // 폼 초기화\n      setQuantity(0);\n      setPrice(0);\n      setChecklist(null);\n    } catch (error) {\n      console.error('투자 실행 중 오류:', error);\n      alert('투자 실행에 실패했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleWarningProceed = async (overrideReason?: string) => {\n    setLoading(true);\n    try {\n      await onSubmit({ quantity, price }, overrideReason);\n      setShowWarningModal(false);\n      onClose();\n      \n      // 폼 초기화\n      setQuantity(0);\n      setPrice(0);\n      setChecklist(null);\n    } catch (error) {\n      console.error('투자 실행 중 오류:', error);\n      alert('투자 실행에 실패했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 현재 입력된 값들로 계산\n  const totalAmount = quantity * price;\n  const canAfford = cashBalance ? totalAmount <= cashBalance.cashBalance : false;\n  const suggestedQuantity = entry && price > 0 ? Math.floor(entry.plannedAmount / price) : 0;\n  const amountDifference = entry ? totalAmount - entry.plannedAmount : 0;\n\n  if (!isOpen || !entry || !plan) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n        <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-lg mx-4\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-bold text-white\">\n              {entry.entryNumber}회차 매수 실행\n            </h3>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-300\"\n              disabled={loading || checkingRisk}\n            >\n              <XMarkIcon className=\"h-6 w-6\" />\n            </button>\n          </div>\n\n          {/* 종목 정보 */}\n          <div className=\"bg-gray-700 p-4 rounded-lg mb-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h4 className=\"font-medium text-white\">{plan.symbol}</h4>\n              <span className=\"text-sm text-gray-400\">{plan.name}</span>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-400\">계획 금액:</span>\n                <span className=\"ml-2 text-white\">\n                  {formatCurrency(entry.plannedAmount, currency)}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">회차:</span>\n                <span className=\"ml-2 text-white\">\n                  {entry.entryNumber}/{plan.plannedEntries}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {/* 매수 가격 */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2 text-gray-300\">\n                매수 가격 ({currency})\n              </label>\n              <input\n                type=\"number\"\n                value={price}\n                onChange={(e) => setPrice(Number(e.target.value))}\n                className=\"w-full px-4 py-2 bg-gray-700 text-white rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"0\"\n                step=\"0.01\"\n                placeholder=\"매수할 가격\"\n                required\n              />\n            </div>\n\n            {/* 매수 수량 */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2 text-gray-300\">\n                매수 수량\n              </label>\n              <input\n                type=\"number\"\n                value={quantity}\n                onChange={(e) => setQuantity(Number(e.target.value))}\n                className=\"w-full px-4 py-2 bg-gray-700 text-white rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"0\"\n                step=\"1\"\n                placeholder=\"매수할 수량\"\n                required\n              />\n              {price > 0 && (\n                <p className=\"text-xs text-gray-400 mt-1\">\n                  권장 수량: {suggestedQuantity}주 (계획 금액 기준)\n                </p>\n              )}\n            </div>\n\n            {/* 계산 결과 */}\n            {quantity > 0 && price > 0 && (\n              <div className=\"bg-gray-700 p-4 rounded-lg\">\n                <h4 className=\"text-sm font-medium mb-3 text-gray-300 flex items-center\">\n                  <ScaleIcon className=\"h-4 w-4 mr-1\" />\n                  매수 정보\n                </h4>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-400\">총 매수 금액:</span>\n                    <span className={`font-medium ${canAfford ? 'text-white' : 'text-red-400'}`}>\n                      {formatCurrency(totalAmount, currency)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-400\">계획 금액 대비:</span>\n                    <span className={`font-medium ${\n                      amountDifference > 0 ? 'text-red-400' : \n                      amountDifference < 0 ? 'text-green-400' : 'text-white'\n                    }`}>\n                      {amountDifference > 0 ? '+' : ''}{formatCurrency(amountDifference, currency)}\n                    </span>\n                  </div>\n                  {cashBalance && (\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-400\">매수 후 현금:</span>\n                      <span className={`font-medium ${\n                        cashBalance.cashBalance - totalAmount >= 0 ? 'text-green-400' : 'text-red-400'\n                      }`}>\n                        {formatCurrency(cashBalance.cashBalance - totalAmount, currency)}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* 현금 잔고 정보 */}\n            {cashBalance && (\n              <div className=\"bg-blue-900/20 border border-blue-500/30 p-4 rounded-lg\">\n                <div className=\"flex items-center mb-2\">\n                  <CurrencyDollarIcon className=\"h-4 w-4 mr-1 text-blue-400\" />\n                  <span className=\"text-sm font-medium text-blue-400\">현금 현황</span>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-xs\">\n                  <div>\n                    <span className=\"text-gray-400\">사용 가능:</span>\n                    <span className=\"ml-1 text-white\">\n                      {formatCurrency(cashBalance.cashBalance, currency)}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">활용률:</span>\n                    <span className=\"ml-1 text-white\">\n                      {cashBalance.utilizationRate.toFixed(1)}%\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 경고 메시지 */}\n            {!canAfford && totalAmount > 0 && (\n              <div className=\"bg-red-900/30 border border-red-500/50 p-3 rounded-lg\">\n                <p className=\"text-red-400 text-sm\">\n                  ⚠️ 현금 잔고가 부족합니다. 매수 금액을 확인해주세요.\n                </p>\n              </div>\n            )}\n\n            {Math.abs(amountDifference) > entry.plannedAmount * 0.1 && (\n              <div className=\"bg-yellow-900/30 border border-yellow-500/50 p-3 rounded-lg\">\n                <p className=\"text-yellow-400 text-sm\">\n                  💡 계획 금액과 {Math.abs(amountDifference) > 0 ? '10% 이상' : ''} 차이가 있습니다.\n                </p>\n              </div>\n            )}\n\n            {/* 위험 관리 안내 */}\n            <div className=\"bg-blue-900/20 border border-blue-500/30 p-3 rounded-lg\">\n              <div className=\"flex items-center mb-1\">\n                <ShieldCheckIcon className=\"h-4 w-4 mr-1 text-blue-400\" />\n                <span className=\"text-sm font-medium text-blue-400\">스마트 위험 관리</span>\n              </div>\n              <p className=\"text-xs text-blue-300\">\n                매수 실행 전 포트폴리오 위험도를 자동으로 분석하여 안전한 투자를 도와드립니다.\n              </p>\n            </div>\n\n            {/* 버튼 */}\n            <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-700\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"px-4 py-2 text-gray-400 hover:text-gray-300\"\n                disabled={loading || checkingRisk}\n              >\n                취소\n              </button>\n              <button\n                type=\"submit\"\n                disabled={loading || checkingRisk || quantity <= 0 || price <= 0}\n                className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n              >\n                {checkingRisk ? (\n                  <>\n                    <ShieldCheckIcon className=\"h-4 w-4 mr-1 animate-spin\" />\n                    위험 분석 중...\n                  </>\n                ) : loading ? (\n                  <>\n                    <PlayIcon className=\"h-4 w-4 mr-1\" />\n                    실행 중...\n                  </>\n                ) : (\n                  <>\n                    <PlayIcon className=\"h-4 w-4 mr-1\" />\n                    안전 점검 후 매수\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      {/* 위험 경고 모달 */}\n      <InvestmentWarningModal\n        isOpen={showWarningModal}\n        onClose={() => setShowWarningModal(false)}\n        onProceed={handleWarningProceed}\n        checklist={checklist}\n        currency={currency}\n      />\n    </>\n  );\n}; ","import {\n    InvestmentEntry,\n    InvestmentPlan,\n    NewInvestmentPlan,\n    NewPosition\n} from \"../types\";\nimport { db } from \"./db\";\nimport { PortfolioService } from \"./portfolioService\";\n\nexport class InvestmentPlanService {\n  // 투자 계획 생성\n  static async create(plan: NewInvestmentPlan): Promise<InvestmentPlan> {\n    const planId = await db.addInvestmentPlan(plan);\n    const createdPlan = await this.getById(planId);\n    if (!createdPlan) throw new Error(\"투자 계획 생성에 실패했습니다.\");\n    return createdPlan;\n  }\n\n  // 투자 계획 조회 (ID로)\n  static async getById(id: number): Promise<InvestmentPlan | undefined> {\n    const plan = await db.investmentPlans.get(id);\n    if (!plan) return undefined;\n\n    // entries 로드\n    plan.entries = await db.investmentEntries.where(\"planId\").equals(id).toArray();\n    return plan;\n  }\n\n  // 포트폴리오별 투자 계획 목록\n  static async getByPortfolioId(portfolioId: number): Promise<InvestmentPlan[]> {\n    return await db.getInvestmentPlans(portfolioId);\n  }\n\n  // 모든 투자 계획 조회\n  static async getAll(): Promise<InvestmentPlan[]> {\n    return await db.getInvestmentPlans();\n  }\n\n  // 투자 계획 업데이트\n  static async update(id: number, data: Partial<InvestmentPlan>): Promise<void> {\n    await db.investmentPlans.update(id, {\n      ...data,\n      updatedAt: Date.now(),\n    });\n  }\n\n  // 투자 계획 삭제\n  static async delete(id: number): Promise<void> {\n    await db.transaction(\"rw\", [db.investmentPlans, db.investmentEntries], async () => {\n      // 관련된 entries 삭제\n      await db.investmentEntries.where(\"planId\").equals(id).delete();\n      // 계획 삭제\n      await db.investmentPlans.delete(id);\n    });\n  }\n\n  // 투자 회차 실행 (실제 매수)\n  static async executeEntry(\n    entryId: number,\n    executionData: {\n      quantity: number;\n      price: number;\n    }\n  ): Promise<void> {\n    const entry = await db.investmentEntries.get(entryId);\n    if (!entry || entry.status !== 'PLANNED') {\n      throw new Error('실행할 수 없는 투자 계획입니다.');\n    }\n\n    const plan = await this.getById(entry.planId);\n    if (!plan) {\n      throw new Error('투자 계획을 찾을 수 없습니다.');\n    }\n\n    // 실제 포지션 생성\n    const newPosition: NewPosition = {\n      portfolioId: plan.portfolioId,\n      symbol: plan.symbol,\n      name: plan.name,\n      quantity: executionData.quantity,\n      avgPrice: executionData.price,\n      currentPrice: executionData.price,\n      tradeDate: Date.now(),\n      strategyCategory: 'UNCATEGORIZED',\n      strategyTags: [`투자계획-${plan.id}`, `${entry.entryNumber}회차`],\n    };\n\n    const positionId = await PortfolioService.createPosition(newPosition);\n\n    // 투자 계획 실행 기록\n    await db.executeInvestmentEntry(entryId, {\n      quantity: executionData.quantity,\n      price: executionData.price,\n      positionId: positionId.id,\n    });\n  }\n\n  // 투자 계획 취소\n  static async cancelPlan(id: number): Promise<void> {\n    const plan = await this.getById(id);\n    if (!plan) {\n      throw new Error('투자 계획을 찾을 수 없습니다.');\n    }\n\n    if (plan.executedEntries > 0) {\n      throw new Error('이미 실행된 회차가 있는 계획은 취소할 수 없습니다.');\n    }\n\n    await this.update(id, { status: 'CANCELLED' });\n  }\n\n  // 투자 계획 통계\n  static async getPlanStats(portfolioId?: number) {\n    const plans = portfolioId \n      ? await this.getByPortfolioId(portfolioId)\n      : await this.getAll();\n\n    const stats = {\n      totalPlans: plans.length,\n      activePlans: plans.filter(p => p.status === 'PLANNED' || p.status === 'IN_PROGRESS').length,\n      completedPlans: plans.filter(p => p.status === 'COMPLETED').length,\n      cancelledPlans: plans.filter(p => p.status === 'CANCELLED').length,\n      totalBudget: plans.reduce((sum, p) => sum + p.totalBudget, 0),\n      executedBudget: plans.reduce((sum, p) => sum + (p.totalBudget - p.remainingBudget), 0),\n      remainingBudget: plans.reduce((sum, p) => sum + p.remainingBudget, 0),\n    };\n\n    return stats;\n  }\n\n  // 다음 실행 가능한 회차 조회\n  static async getNextExecutableEntry(planId: number): Promise<InvestmentEntry | null> {\n    const plan = await this.getById(planId);\n    if (!plan || plan.status === 'COMPLETED' || plan.status === 'CANCELLED') {\n      return null;\n    }\n\n    const nextEntry = plan.entries\n      .filter(entry => entry.status === 'PLANNED')\n      .sort((a, b) => a.entryNumber - b.entryNumber)[0];\n\n    return nextEntry || null;\n  }\n\n  // 투자 계획 요약 정보\n  static async getPlanSummary(planId: number) {\n    const plan = await this.getById(planId);\n    if (!plan) return null;\n\n    const executedEntries = plan.entries.filter(e => e.status === 'EXECUTED');\n    const executedAmount = executedEntries.reduce((sum, e) => sum + (e.executedAmount || 0), 0);\n    const totalQuantity = executedEntries.reduce((sum, e) => sum + (e.quantity || 0), 0);\n    const averagePrice = totalQuantity > 0 ? executedAmount / totalQuantity : 0;\n\n    return {\n      plan,\n      executedAmount,\n      totalQuantity,\n      averagePrice,\n      progressRate: (plan.executedEntries / plan.plannedEntries) * 100,\n      nextEntry: await this.getNextExecutableEntry(planId),\n    };\n  }\n} "],"names":["ExclamationCircleIcon","title","titleId","props","svgRef","React.createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ExclamationCircleIcon$1","React.forwardRef","PlayIcon","PlayIcon$1","ScaleIcon","ScaleIcon$1","XCircleIcon","XCircleIcon$1","XMarkIcon","XMarkIcon$1","InvestmentWarningModal","isOpen","onClose","onProceed","checklist","currency","showOverrideForm","setShowOverrideForm","useState","overrideReason","setOverrideReason","handleProceed","canProceed","getStatusIcon","status","jsx","CheckCircleIcon","className","getStatusColor","getWarningTypeIcon","type","ExclamationTriangleIcon","passedChecks","checks","filter","check","length","totalChecks","warningChecks","failedChecks","children","jsxs","ShieldCheckIcon","onClick","symbol","plannedAmount","risk","getRiskColor","overallRisk","map","isBlocking","category","toLowerCase","message","recommendation","warnings","warning","value","onChange","e","target","rows","placeholder","required","trim","disabled","ExecuteEntryModal","onSubmit","entry","plan","quantity","setQuantity","price","setPrice","cashBalance","setCashBalance","loading","setLoading","setChecklist","showWarningModal","setShowWarningModal","checkingRisk","setCheckingRisk","useEffect","loadCashBalance","suggestedQuantity","Math","floor","async","balance","AccountService","getCashBalance","portfolioId","error","handleDirectSubmit","alert","totalAmount","canAfford","amountDifference","Fragment","entryNumber","name","plannedEntries","preventDefault","confirmMessage","formatCurrency","window","confirm","checklistResult","RiskManagementService","createInvestmentChecklist","checkInvestmentRisk","Number","min","step","CurrencyDollarIcon","utilizationRate","toFixed","abs","InvestmentPlanService","create","planId","db","addInvestmentPlan","createdPlan","this","getById","Error","investmentPlans","get","entries","investmentEntries","where","equals","toArray","getByPortfolioId","getInvestmentPlans","getAll","update","data","updatedAt","Date","now","transaction","delete","executeEntry","entryId","executionData","newPosition","avgPrice","currentPrice","tradeDate","strategyCategory","strategyTags","positionId","PortfolioService","createPosition","executeInvestmentEntry","cancelPlan","executedEntries","getPlanStats","plans","totalPlans","activePlans","p","completedPlans","cancelledPlans","totalBudget","reduce","sum","executedBudget","remainingBudget","getNextExecutableEntry","sort","a","b","getPlanSummary","executedAmount","totalQuantity","averagePrice","progressRate","nextEntry"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}