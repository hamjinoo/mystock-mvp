{"version":3,"file":"EditPosition-d472cc89.js","sources":["../../src/pages/EditPosition.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { CurrencyInput } from \"../components/CurrencyInput\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { AccountService } from \"../services/accountService\";\r\nimport { PortfolioService } from \"../services/portfolioService\";\r\nimport { Account, Portfolio, Position } from \"../types\";\r\n\r\nexport const EditPosition: React.FC = () => {\r\n  const { accountId, positionId } = useParams<{\r\n    accountId: string;\r\n    positionId: string;\r\n  }>();\r\n  const navigate = useNavigate();\r\n  const [account, setAccount] = useState<Account>();\r\n  const [allPortfolios, setAllPortfolios] = useState<Portfolio[]>([]);\r\n  const [position, setPosition] = useState<Position>();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [avgPrice, setAvgPrice] = useState(0);\r\n  const [currentPrice, setCurrentPrice] = useState(0);\r\n  const [portfolioId, setPortfolioId] = useState<number>();\r\n  const [category, setCategory] = useState<\r\n    \"LONG_TERM\" | \"MID_TERM\" | \"SHORT_TERM\" | \"UNCATEGORIZED\"\r\n  >(\"UNCATEGORIZED\");\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [accountId, positionId]);\r\n\r\n  const loadData = async () => {\r\n    if (!accountId || !positionId) return;\r\n\r\n    try {\r\n      const [accountData, portfoliosData, positionData] = await Promise.all([\r\n        AccountService.getById(Number(accountId)),\r\n        PortfolioService.getAll(), // 모든 포트폴리오 로드\r\n        PortfolioService.getPositionById(Number(positionId)),\r\n      ]);\r\n\r\n      if (!accountData || !positionData)\r\n        throw new Error(\"데이터를 찾을 수 없습니다.\");\r\n\r\n      setAccount(accountData);\r\n      setAllPortfolios(portfoliosData);\r\n      setPosition(positionData);\r\n\r\n      // 포지션 데이터로 폼 초기화\r\n      setSymbol(positionData.symbol);\r\n      setName(positionData.name);\r\n      setQuantity(positionData.quantity);\r\n      setAvgPrice(positionData.avgPrice);\r\n      setCurrentPrice(positionData.currentPrice);\r\n      setPortfolioId(positionData.portfolioId);\r\n      setCategory(positionData.strategyCategory);\r\n    } catch (error) {\r\n      console.error(\"데이터 로딩 중 오류:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!accountId || !positionId || !portfolioId) return;\r\n\r\n    try {\r\n      await PortfolioService.updatePosition(Number(positionId), {\r\n        portfolioId,\r\n        symbol: symbol.trim().toUpperCase(),\r\n        name: name.trim() || symbol.trim().toUpperCase(),\r\n        quantity,\r\n        avgPrice,\r\n        currentPrice,\r\n        strategyCategory: category,\r\n      });\r\n\r\n      // 선택한 포트폴리오가 속한 계좌로 리다이렉트\r\n      const selectedPortfolio = allPortfolios.find((p) => p.id === portfolioId);\r\n      const targetAccountId = selectedPortfolio\r\n        ? selectedPortfolio.accountId\r\n        : accountId;\r\n      navigate(`/accounts/${targetAccountId}`);\r\n    } catch (error) {\r\n      console.error(\"포지션 수정 중 오류:\", error);\r\n      alert(\"포지션 수정에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  // 선택된 포트폴리오의 통화 가져오기\r\n  const selectedPortfolio = allPortfolios.find((p) => p.id === portfolioId);\r\n  const currency = selectedPortfolio?.currency || account?.currency || \"KRW\";\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!account || !position) {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-400\">데이터를 찾을 수 없습니다.</p>\r\n          <button\r\n            onClick={() => navigate(\"/accounts\")}\r\n            className=\"mt-4 text-blue-500 hover:text-blue-400\"\r\n          >\r\n            계좌 목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const categoryLabels = {\r\n    LONG_TERM: \"장기 투자\",\r\n    MID_TERM: \"중기 투자\",\r\n    SHORT_TERM: \"단기 투자\",\r\n    UNCATEGORIZED: \"미분류\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <h1 className=\"text-2xl font-bold mb-8\">포지션 수정</h1>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">종목 코드</label>\r\n            <input\r\n              type=\"text\"\r\n              value={symbol}\r\n              onChange={(e) => setSymbol(e.target.value)}\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"예: AAPL, 005930\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">종목명</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"예: Apple Inc., 삼성전자\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">포트폴리오</label>\r\n            <select\r\n              value={portfolioId}\r\n              onChange={(e) => setPortfolioId(Number(e.target.value))}\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              required\r\n            >\r\n              {allPortfolios.map((portfolio) => (\r\n                <option key={portfolio.id} value={portfolio.id}>\r\n                  {portfolio.name} ({portfolio.config?.period || \"미분류\"}) -{\" \"}\r\n                  {portfolio.currency}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <p className=\"text-xs text-gray-400 mt-1\">\r\n              현재 계좌: {account.accountName} ({account.broker})\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              투자 전략 카테고리\r\n            </label>\r\n            <select\r\n              value={category}\r\n              onChange={(e) =>\r\n                setCategory(\r\n                  e.target.value as\r\n                    | \"LONG_TERM\"\r\n                    | \"MID_TERM\"\r\n                    | \"SHORT_TERM\"\r\n                    | \"UNCATEGORIZED\"\r\n                )\r\n              }\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              {Object.entries(categoryLabels).map(([value, label]) => (\r\n                <option key={value} value={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">수량</label>\r\n              <input\r\n                type=\"number\"\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(Number(e.target.value))}\r\n                className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                placeholder=\"예: 10\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <CurrencyInput\r\n              label=\"평균단가\"\r\n              value={avgPrice}\r\n              onChange={setAvgPrice}\r\n              currency={currency}\r\n              required\r\n              type=\"price\"\r\n            />\r\n\r\n            <CurrencyInput\r\n              label=\"현재가\"\r\n              value={currentPrice}\r\n              onChange={setCurrentPrice}\r\n              currency={currency}\r\n              required\r\n              type=\"price\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                // 선택된 포트폴리오가 있으면 해당 계좌로, 없으면 원래 계좌로\r\n                const selectedPortfolio = allPortfolios.find(\r\n                  (p) => p.id === portfolioId\r\n                );\r\n                const targetAccountId = selectedPortfolio\r\n                  ? selectedPortfolio.accountId\r\n                  : accountId;\r\n                navigate(`/accounts/${targetAccountId}`);\r\n              }}\r\n              className=\"px-4 py-2 text-gray-400 hover:text-gray-300\"\r\n            >\r\n              취소\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n            >\r\n              저장\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["EditPosition","accountId","positionId","useParams","navigate","useNavigate","account","setAccount","useState","allPortfolios","setAllPortfolios","position","setPosition","loading","setLoading","symbol","setSymbol","name","setName","quantity","setQuantity","avgPrice","setAvgPrice","currentPrice","setCurrentPrice","portfolioId","setPortfolioId","category","setCategory","useEffect","loadData","async","accountData","portfoliosData","positionData","Promise","all","AccountService","getById","Number","PortfolioService","getAll","getPositionById","Error","strategyCategory","error","selectedPortfolio","find","p","id","currency","jsx","className","children","LoadingSpinner","jsxs","onClick","onSubmit","e","preventDefault","updatePosition","trim","toUpperCase","targetAccountId","alert","type","value","onChange","target","placeholder","required","map","portfolio","config","period","accountName","broker","Object","entries","LONG_TERM","MID_TERM","SHORT_TERM","UNCATEGORIZED","label","min","step","CurrencyInput"],"mappings":"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"}