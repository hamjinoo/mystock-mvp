{"version":3,"file":"InvestmentPlanDetailPage-80d38f63.js","sources":["../../src/pages/InvestmentPlanDetailPage.tsx"],"sourcesContent":["import {\n    ArrowLeftIcon,\n    CalendarDaysIcon,\n    ChartBarIcon,\n    CheckCircleIcon,\n    ClockIcon,\n    CurrencyDollarIcon,\n    ExclamationTriangleIcon,\n    PlayIcon,\n    XCircleIcon\n} from '@heroicons/react/24/outline';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ExecuteEntryModal } from '../components/ExecuteEntryModal';\nimport { LoadingSpinner } from '../components/LoadingSpinner';\nimport { InvestmentPlanService } from '../services/investmentPlanService';\nimport { PortfolioService } from '../services/portfolioService';\nimport { InvestmentEntry, InvestmentPlan, Portfolio } from '../types';\nimport { formatCurrency } from '../utils/currencyUtils';\n\nexport const InvestmentPlanDetailPage: React.FC = () => {\n  const { portfolioId, planId } = useParams<{ portfolioId: string; planId: string }>();\n  const navigate = useNavigate();\n  \n  const [plan, setPlan] = useState<InvestmentPlan | null>(null);\n  const [portfolio, setPortfolio] = useState<Portfolio | null>(null);\n  const [planSummary, setPlanSummary] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  \n  // 모달 상태\n  const [showExecuteModal, setShowExecuteModal] = useState(false);\n  const [selectedEntry, setSelectedEntry] = useState<InvestmentEntry | null>(null);\n\n  useEffect(() => {\n    if (planId && portfolioId) {\n      loadData();\n    }\n  }, [planId, portfolioId]);\n\n  const loadData = async () => {\n    if (!planId || !portfolioId) return;\n\n    try {\n      const [planData, portfolioData, summaryData] = await Promise.all([\n        InvestmentPlanService.getById(Number(planId)),\n        PortfolioService.getById(Number(portfolioId)),\n        InvestmentPlanService.getPlanSummary(Number(planId)),\n      ]);\n\n      setPlan(planData || null);\n      setPortfolio(portfolioData || null);\n      setPlanSummary(summaryData);\n    } catch (error) {\n      console.error('데이터 로딩 중 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExecuteEntry = (entry: InvestmentEntry) => {\n    setSelectedEntry(entry);\n    setShowExecuteModal(true);\n  };\n\n  const handleExecuteSubmit = async (executionData: { quantity: number; price: number }) => {\n    if (!selectedEntry) return;\n\n    try {\n      await InvestmentPlanService.executeEntry(selectedEntry.id, executionData);\n      loadData(); // 데이터 새로고침\n      setShowExecuteModal(false);\n      setSelectedEntry(null);\n    } catch (error) {\n      console.error('투자 실행 중 오류:', error);\n      throw error;\n    }\n  };\n\n  const handleCancelPlan = async () => {\n    if (!plan) return;\n    \n    const confirmMessage = '정말 이 투자 계획을 취소하시겠습니까?';\n    if (!window.confirm(confirmMessage)) return;\n\n    try {\n      await InvestmentPlanService.cancelPlan(plan.id);\n      navigate(`/portfolios/${portfolioId}/investment-plans`);\n    } catch (error) {\n      console.error('투자 계획 취소 중 오류:', error);\n      alert('투자 계획 취소에 실패했습니다.');\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'PLANNED': return 'text-blue-400 bg-blue-900/20 border-blue-500/30';\n      case 'IN_PROGRESS': return 'text-yellow-400 bg-yellow-900/20 border-yellow-500/30';\n      case 'COMPLETED': return 'text-green-400 bg-green-900/20 border-green-500/30';\n      case 'CANCELLED': return 'text-red-400 bg-red-900/20 border-red-500/30';\n      default: return 'text-gray-400 bg-gray-900/20 border-gray-500/30';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'PLANNED': return '계획됨';\n      case 'IN_PROGRESS': return '진행 중';\n      case 'COMPLETED': return '완료';\n      case 'CANCELLED': return '취소됨';\n      default: return '알 수 없음';\n    }\n  };\n\n  const getEntryStatusIcon = (status: string) => {\n    switch (status) {\n      case 'EXECUTED': return <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />;\n      case 'CANCELLED': return <XCircleIcon className=\"h-5 w-5 text-red-400\" />;\n      default: return <ClockIcon className=\"h-5 w-5 text-gray-400\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-center items-center h-64\">\n          <LoadingSpinner />\n        </div>\n      </div>\n    );\n  }\n\n  if (!plan || !portfolio) {\n    return (\n      <div className=\"p-4\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-400\">투자 계획을 찾을 수 없습니다.</p>\n          <button\n            onClick={() => navigate(`/portfolios/${portfolioId}/investment-plans`)}\n            className=\"mt-4 text-blue-500 hover:text-blue-400\"\n          >\n            목록으로 돌아가기\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const progressRate = (plan.executedEntries / plan.plannedEntries) * 100;\n  const nextEntry = plan.entries\n    .filter(entry => entry.status === 'PLANNED')\n    .sort((a, b) => a.entryNumber - b.entryNumber)[0];\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* 헤더 */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={() => navigate(`/portfolios/${portfolioId}/investment-plans`)}\n            className=\"text-sm text-gray-400 hover:text-white flex items-center\"\n          >\n            <ArrowLeftIcon className=\"h-4 w-4 mr-1\" />\n            투자 계획 목록\n          </button>\n        </div>\n\n        {/* 기본 정보 */}\n        <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-white\">{plan.symbol}</h1>\n              <p className=\"text-gray-400\">{plan.name}</p>\n              <p className=\"text-sm text-gray-500 mt-1\">{portfolio.name}</p>\n            </div>\n            <div className={`px-3 py-1 rounded border ${getStatusColor(plan.status)}`}>\n              <span className=\"text-sm font-medium\">\n                {getStatusText(plan.status)}\n              </span>\n            </div>\n          </div>\n\n          {/* 진행률 */}\n          <div className=\"mb-4\">\n            <div className=\"flex justify-between text-sm mb-2\">\n              <span className=\"text-gray-400\">전체 진행률</span>\n              <span className=\"text-white\">{progressRate.toFixed(0)}%</span>\n            </div>\n            <div className=\"w-full bg-gray-700 rounded-full h-3\">\n              <div \n                className=\"bg-blue-500 h-3 rounded-full transition-all duration-300\"\n                style={{ width: `${progressRate}%` }}\n              ></div>\n            </div>\n            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n              <span>{plan.executedEntries}/{plan.plannedEntries} 회차 완료</span>\n              <span>\n                {formatCurrency(plan.totalBudget - plan.remainingBudget, portfolio.currency)} / \n                {formatCurrency(plan.totalBudget, portfolio.currency)}\n              </span>\n            </div>\n          </div>\n\n          {/* 통계 */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <CurrencyDollarIcon className=\"h-4 w-4 text-green-400 mr-1\" />\n                <span className=\"text-xs text-gray-400\">총 예산</span>\n              </div>\n              <p className=\"text-lg font-bold text-white\">\n                {formatCurrency(plan.totalBudget, portfolio.currency)}\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <ChartBarIcon className=\"h-4 w-4 text-blue-400 mr-1\" />\n                <span className=\"text-xs text-gray-400\">실행 금액</span>\n              </div>\n              <p className=\"text-lg font-bold text-white\">\n                {formatCurrency(plan.totalBudget - plan.remainingBudget, portfolio.currency)}\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <CalendarDaysIcon className=\"h-4 w-4 text-yellow-400 mr-1\" />\n                <span className=\"text-xs text-gray-400\">계획 회차</span>\n              </div>\n              <p className=\"text-lg font-bold text-white\">{plan.plannedEntries}회</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <CheckCircleIcon className=\"h-4 w-4 text-green-400 mr-1\" />\n                <span className=\"text-xs text-gray-400\">완료 회차</span>\n              </div>\n              <p className=\"text-lg font-bold text-white\">{plan.executedEntries}회</p>\n            </div>\n          </div>\n        </div>\n\n        {/* 다음 실행 가능한 회차 */}\n        {nextEntry && plan.status !== 'CANCELLED' && (\n          <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h3 className=\"text-lg font-bold text-blue-400\">다음 실행 회차</h3>\n              <span className=\"text-sm text-blue-300\">\n                {nextEntry.entryNumber}회차 / {plan.plannedEntries}회차\n              </span>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <span className=\"text-sm text-gray-400\">계획 금액:</span>\n                <span className=\"ml-2 text-white font-medium\">\n                  {formatCurrency(nextEntry.plannedAmount, portfolio.currency)}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-sm text-gray-400\">예상 수량:</span>\n                <span className=\"ml-2 text-white font-medium\">\n                  시장가 기준 계산\n                </span>\n              </div>\n            </div>\n            <button\n              onClick={() => handleExecuteEntry(nextEntry)}\n              className=\"w-full px-4 py-3 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors flex items-center justify-center\"\n            >\n              <PlayIcon className=\"h-5 w-5 mr-2\" />\n              {nextEntry.entryNumber}회차 매수 실행\n            </button>\n          </div>\n        )}\n\n        {/* 실행 내역 */}\n        <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n          <h3 className=\"text-xl font-bold text-white mb-4\">실행 내역</h3>\n          <div className=\"space-y-3\">\n            {plan.entries\n              .sort((a, b) => a.entryNumber - b.entryNumber)\n              .map((entry) => (\n                <div\n                  key={entry.id}\n                  className={`p-4 rounded-lg border ${\n                    entry.status === 'EXECUTED' \n                      ? 'bg-green-900/10 border-green-500/30' \n                      : entry.status === 'CANCELLED'\n                      ? 'bg-red-900/10 border-red-500/30'\n                      : 'bg-gray-700 border-gray-600'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center\">\n                      {getEntryStatusIcon(entry.status)}\n                      <span className=\"ml-2 font-medium text-white\">\n                        {entry.entryNumber}회차\n                      </span>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"text-sm text-gray-400\">계획 금액</span>\n                      <p className=\"font-medium text-white\">\n                        {formatCurrency(entry.plannedAmount, portfolio.currency)}\n                      </p>\n                    </div>\n                  </div>\n\n                  {entry.status === 'EXECUTED' && (\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-3 pt-3 border-t border-gray-600\">\n                      <div>\n                        <span className=\"text-xs text-gray-400\">실행 금액</span>\n                        <p className=\"text-sm font-medium text-white\">\n                          {formatCurrency(entry.executedAmount || 0, portfolio.currency)}\n                        </p>\n                      </div>\n                      <div>\n                        <span className=\"text-xs text-gray-400\">매수 수량</span>\n                        <p className=\"text-sm font-medium text-white\">\n                          {entry.quantity?.toLocaleString() || 0}주\n                        </p>\n                      </div>\n                      <div>\n                        <span className=\"text-xs text-gray-400\">매수 단가</span>\n                        <p className=\"text-sm font-medium text-white\">\n                          {formatCurrency(entry.price || 0, portfolio.currency)}\n                        </p>\n                      </div>\n                      <div>\n                        <span className=\"text-xs text-gray-400\">실행 일시</span>\n                        <p className=\"text-sm font-medium text-white\">\n                          {entry.executedAt ? new Date(entry.executedAt).toLocaleDateString() : '-'}\n                        </p>\n                      </div>\n                    </div>\n                  )}\n\n                  {entry.status === 'PLANNED' && entry === nextEntry && (\n                    <div className=\"mt-3 pt-3 border-t border-gray-600\">\n                      <button\n                        onClick={() => handleExecuteEntry(entry)}\n                        className=\"w-full px-3 py-2 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 transition-colors\"\n                      >\n                        <PlayIcon className=\"h-4 w-4 inline mr-1\" />\n                        실행하기\n                      </button>\n                    </div>\n                  )}\n                </div>\n              ))}\n          </div>\n        </div>\n\n        {/* 투자 요약 (planSummary가 있는 경우) */}\n        {planSummary && planSummary.executedAmount > 0 && (\n          <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">투자 요약</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n              <div>\n                <span className=\"text-sm text-gray-400\">총 실행 금액</span>\n                <p className=\"text-lg font-bold text-white\">\n                  {formatCurrency(planSummary.executedAmount, portfolio.currency)}\n                </p>\n              </div>\n              <div>\n                <span className=\"text-sm text-gray-400\">총 보유 수량</span>\n                <p className=\"text-lg font-bold text-white\">\n                  {planSummary.totalQuantity.toLocaleString()}주\n                </p>\n              </div>\n              <div>\n                <span className=\"text-sm text-gray-400\">평균 매수가</span>\n                <p className=\"text-lg font-bold text-white\">\n                  {formatCurrency(planSummary.averagePrice, portfolio.currency)}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 액션 버튼들 */}\n        <div className=\"flex gap-3\">\n          {plan.status === 'PLANNED' && plan.executedEntries === 0 && (\n            <button\n              onClick={handleCancelPlan}\n              className=\"flex items-center px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n            >\n              <ExclamationTriangleIcon className=\"h-5 w-5 mr-1\" />\n              계획 취소\n            </button>\n          )}\n        </div>\n\n        {/* 실행 모달 */}\n        <ExecuteEntryModal\n          isOpen={showExecuteModal}\n          onClose={() => {\n            setShowExecuteModal(false);\n            setSelectedEntry(null);\n          }}\n          onSubmit={handleExecuteSubmit}\n          entry={selectedEntry}\n          plan={plan}\n          currency={portfolio.currency}\n        />\n      </div>\n    </div>\n  );\n}; "],"names":["InvestmentPlanDetailPage","portfolioId","planId","useParams","navigate","useNavigate","plan","setPlan","useState","portfolio","setPortfolio","planSummary","setPlanSummary","loading","setLoading","showExecuteModal","setShowExecuteModal","selectedEntry","setSelectedEntry","useEffect","loadData","async","planData","portfolioData","summaryData","Promise","all","InvestmentPlanService","getById","Number","PortfolioService","getPlanSummary","error","handleExecuteEntry","entry","getEntryStatusIcon","status","jsx","CheckCircleIcon","className","XCircleIcon","ClockIcon","children","LoadingSpinner","jsxs","onClick","progressRate","executedEntries","plannedEntries","nextEntry","entries","filter","sort","a","b","entryNumber","ArrowLeftIcon","symbol","name","getStatusColor","toFixed","style","width","formatCurrency","totalBudget","remainingBudget","currency","CurrencyDollarIcon","ChartBarIcon","CalendarDaysIcon","plannedAmount","PlayIcon","map","executedAmount","quantity","toLocaleString","price","executedAt","Date","toLocaleDateString","id","totalQuantity","averagePrice","window","confirm","cancelPlan","alert","ExclamationTriangleIcon","ExecuteEntryModal","isOpen","onClose","onSubmit","executionData","executeEntry"],"mappings":"imBAoBO,MAAMA,EAAqC,KAChD,MAAMC,YAAEA,EAAAC,OAAaA,GAAWC,IAC1BC,EAAWC,KAEVC,EAAMC,GAAWC,WAAgC,OACjDC,EAAWC,GAAgBF,WAA2B,OACtDG,EAAaC,GAAkBJ,WAAc,OAC7CK,EAASC,GAAcN,YAAS,IAGhCO,EAAkBC,GAAuBR,YAAS,IAClDS,EAAeC,GAAoBV,WAAiC,MAE3EW,EAAAA,UAAU,KACJjB,GAAUD,GACHmB,KAEV,CAAClB,EAAQD,IAEZ,MAAMmB,EAAWC,UACX,GAACnB,GAAWD,EAEZ,IACF,MAAOqB,EAAUC,EAAeC,SAAqBC,QAAQC,IAAI,CAC/DC,EAAsBC,QAAQC,OAAO3B,IACrC4B,EAAiBF,QAAQC,OAAO5B,IAChC0B,EAAsBI,eAAeF,OAAO3B,MAG9CK,EAAQe,GAAY,MACpBZ,EAAaa,GAAiB,MAC9BX,EAAeY,SACRQ,GAC4B,CACnC,QACAlB,GAAW,EACb,GAGImB,EAAsBC,IAC1BhB,EAAiBgB,GACjBlB,GAAoB,IAoDhBmB,EAAsBC,IAC1B,OAAQA,GACN,IAAK,WAAmB,OAAAC,EAAAA,IAACC,EAAgB,CAAAC,UAAU,2BACnD,IAAK,YAAoB,OAAAF,EAAAA,IAACG,EAAY,CAAAD,UAAU,yBAChD,QAAgB,OAAAF,EAAAA,IAACI,EAAU,CAAAF,UAAU,4BAIzC,GAAI1B,EAEA,OAAAwB,EAAAA,IAAC,MAAI,CAAAE,UAAU,8BACbG,SAAAL,EAAAA,IAAC,MAAI,CAAAE,UAAU,wCACbG,SAAAL,EAAAA,IAACM,EAAe,QAMpB,IAACrC,IAASG,EACZ,aACG,MAAI,CAAA8B,UAAU,MACbG,SAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,cACbG,SAAA,CAACL,EAAAA,IAAA,IAAA,CAAEE,UAAU,gBAAgBG,SAAiB,sBAC9CL,EAAAA,IAAC,SAAA,CACCQ,QAAS,IAAMzC,EAAS,eAAeH,sBACvCsC,UAAU,yCACXG,SAAA,mBAQT,MAAMI,EAAgBxC,EAAKyC,gBAAkBzC,EAAK0C,eAAkB,IAC9DC,EAAY3C,EAAK4C,QACpBC,OAAgBjB,GAAiB,YAAjBA,EAAME,QACtBgB,KAAK,CAACC,EAAGC,IAAMD,EAAEE,YAAcD,EAAEC,aAAa,GAEjD,aACG,MAAI,CAAAhB,UAAU,MACbG,SAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,oBAEbG,SAAA,CAACL,EAAAA,IAAA,MAAA,CAAIE,UAAU,yCACbG,SAAAE,EAAAA,KAAC,SAAA,CACCC,QAAS,IAAMzC,EAAS,eAAeH,sBACvCsC,UAAU,2DAEVG,SAAA,CAACL,EAAAA,IAAAmB,EAAA,CAAcjB,UAAU,iBAAiB,gBAM9CK,EAAAA,KAAC,MAAI,CAAAL,UAAU,kCACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,yCACbG,SAAA,CAAAE,OAAC,MACC,CAAAF,SAAA,CAAAL,EAAAA,IAAC,KAAG,CAAAE,UAAU,gCAAiCG,SAAApC,EAAKmD,SACnDpB,EAAAA,IAAA,IAAA,CAAEE,UAAU,gBAAiBG,WAAKgB,OAClCrB,EAAAA,IAAA,IAAA,CAAEE,UAAU,6BAA8BG,WAAUgB,gBAEtD,MAAI,CAAAnB,UAAW,4BAjFH,CAACH,IACtB,OAAQA,GACN,IAAK,UAAkB,MAAA,kDACvB,IAAK,cAAsB,MAAA,wDAC3B,IAAK,YAAoB,MAAA,qDACzB,IAAK,YAAoB,MAAA,+CACzB,QAAgB,MAAA,oDA2EkCuB,CAAerD,EAAK8B,UAC9DM,SAAAL,EAAAA,IAAC,QAAKE,UAAU,sBACbG,SAzEO,CAACN,IACrB,OAAQA,GACN,IAAK,UAAkB,MAAA,MACvB,IAAK,cAAsB,MAAA,OAC3B,IAAK,YAAoB,MAAA,KACzB,IAAK,YAAoB,MAAA,MACzB,QAAgB,MAAA,YAmES9B,EAAK8B,eAM1BQ,EAAAA,KAAC,MAAI,CAAAL,UAAU,OACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,oCACbG,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,gBAAgBG,SAAM,WACtCE,EAAAA,KAAC,OAAK,CAAAL,UAAU,aAAcG,SAAA,CAAAI,EAAac,QAAQ,GAAG,UAExDvB,EAAAA,IAAC,MAAI,CAAAE,UAAU,sCACbG,SAAAL,EAAAA,IAAC,MAAA,CACCE,UAAU,2DACVsB,MAAO,CAAEC,MAAO,GAAGhB,UAGvBF,EAAAA,KAAC,MAAI,CAAAL,UAAU,kDACbG,SAAA,CAAAE,OAAC,OAAM,CAAAF,SAAA,CAAKpC,EAAAyC,gBAAgB,IAAEzC,EAAK0C,eAAe,mBACjD,OACE,CAAAN,SAAA,CAAAqB,EAAezD,EAAK0D,YAAc1D,EAAK2D,gBAAiBxD,EAAUyD,UAAU,KAC5EH,EAAezD,EAAK0D,YAAavD,EAAUyD,mBAMlDtB,EAAAA,KAAC,MAAI,CAAAL,UAAU,wCACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,cACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,wCACbG,SAAA,CAACL,EAAAA,IAAA8B,EAAA,CAAmB5B,UAAU,gCAC7BF,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAI,YAE9CL,EAAAA,IAAC,KAAEE,UAAU,+BACVG,WAAepC,EAAK0D,YAAavD,EAAUyD,eAGhDtB,EAAAA,KAAC,MAAI,CAAAL,UAAU,cACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,wCACbG,SAAA,CAACL,EAAAA,IAAA+B,EAAA,CAAa7B,UAAU,+BACvBF,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,aAE/CL,EAAAA,IAAC,IAAE,CAAAE,UAAU,+BACVG,SAAAqB,EAAezD,EAAK0D,YAAc1D,EAAK2D,gBAAiBxD,EAAUyD,eAGvEtB,EAAAA,KAAC,MAAI,CAAAL,UAAU,cACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,wCACbG,SAAA,CAACL,EAAAA,IAAAgC,EAAA,CAAiB9B,UAAU,iCAC3BF,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,aAE/CE,EAAAA,KAAC,IAAE,CAAAL,UAAU,+BAAgCG,SAAA,CAAKpC,EAAA0C,eAAe,UAEnEJ,EAAAA,KAAC,MAAI,CAAAL,UAAU,cACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,wCACbG,SAAA,CAACL,EAAAA,IAAAC,EAAA,CAAgBC,UAAU,gCAC1BF,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,aAE/CE,EAAAA,KAAC,IAAE,CAAAL,UAAU,+BAAgCG,SAAA,CAAKpC,EAAAyC,gBAAgB,gBAMvEE,GAA6B,cAAhB3C,EAAK8B,QAChBQ,EAAAA,KAAA,MAAA,CAAIL,UAAU,+DACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,yCACbG,SAAA,CAACL,EAAAA,IAAA,KAAA,CAAGE,UAAU,kCAAkCG,SAAQ,aACxDE,EAAAA,KAAC,OAAK,CAAAL,UAAU,wBACbG,SAAA,CAAUO,EAAAM,YAAY,QAAMjD,EAAK0C,eAAe,WAGrDJ,EAAAA,KAAC,MAAI,CAAAL,UAAU,8BACbG,SAAA,CAAAE,OAAC,MACC,CAAAF,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAM,WAC9CL,EAAAA,IAAC,QAAKE,UAAU,8BACbG,WAAeO,EAAUqB,cAAe7D,EAAUyD,sBAGtD,MACC,CAAAxB,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAM,WAC7CL,EAAAA,IAAA,OAAA,CAAKE,UAAU,8BAA8BG,SAE9C,oBAGJE,EAAAA,KAAC,SAAA,CACCC,QAAS,IAAMZ,EAAmBgB,GAClCV,UAAU,uHAEVG,SAAA,CAACL,EAAAA,IAAAkC,EAAA,CAAShC,UAAU,iBACnBU,EAAUM,YAAY,iBAM7BX,EAAAA,KAAC,MAAI,CAAAL,UAAU,kCACbG,SAAA,CAACL,EAAAA,IAAA,KAAA,CAAGE,UAAU,oCAAoCG,SAAK,gBACtD,MAAI,CAAAH,UAAU,YACZG,SAAApC,EAAK4C,QACHE,KAAK,CAACC,EAAGC,IAAMD,EAAEE,YAAcD,EAAEC,aACjCiB,IAAKtC,GACJU,EAAAA,KAAC,MAAA,CAECL,UAAW,0BACQ,aAAjBL,EAAME,OACF,sCACiB,cAAjBF,EAAME,OACN,kCACA,+BAGNM,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,yCACbG,SAAA,CAACE,EAAAA,KAAA,MAAA,CAAIL,UAAU,oBACZG,SAAA,CAAAP,EAAmBD,EAAME,QAC1BQ,EAAAA,KAAC,OAAK,CAAAL,UAAU,8BACbG,SAAA,CAAMR,EAAAqB,YAAY,WAGvBX,EAAAA,KAAC,MAAI,CAAAL,UAAU,aACbG,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,UAC7CL,EAAAA,IAAC,KAAEE,UAAU,yBACVG,WAAeR,EAAMoC,cAAe7D,EAAUyD,kBAKnC,aAAjBhC,EAAME,QACJQ,EAAAA,KAAA,MAAA,CAAIL,UAAU,2EACbG,SAAA,CAAAE,OAAC,MACC,CAAAF,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,UAC7CL,EAAAA,IAAC,IAAE,CAAAE,UAAU,iCACVG,SAAAqB,EAAe7B,EAAMuC,gBAAkB,EAAGhE,EAAUyD,sBAGxD,MACC,CAAAxB,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,UAC7CE,EAAAA,KAAC,IAAE,CAAAL,UAAU,iCACVG,SAAA,CAAMR,EAAAwC,UAAUC,kBAAoB,EAAE,iBAG1C,MACC,CAAAjC,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,UAC7CL,EAAAA,IAAC,IAAE,CAAAE,UAAU,iCACVG,SAAAqB,EAAe7B,EAAM0C,OAAS,EAAGnE,EAAUyD,sBAG/C,MACC,CAAAxB,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAK,UAC5CL,EAAAA,IAAA,IAAA,CAAEE,UAAU,iCACVG,SAAMR,EAAA2C,WAAa,IAAIC,KAAK5C,EAAM2C,YAAYE,qBAAuB,YAM5D,YAAjB7C,EAAME,QAAwBF,IAAUe,GACtCZ,MAAA,MAAA,CAAIE,UAAU,qCACbG,SAAAE,EAAAA,KAAC,SAAA,CACCC,QAAS,IAAMZ,EAAmBC,GAClCK,UAAU,8FAEVG,SAAA,CAACL,EAAAA,IAAAkC,EAAA,CAAShC,UAAU,wBAAwB,cA3D7CL,EAAM8C,UAsEpBrE,GAAeA,EAAY8D,eAAiB,GAC1C7B,EAAAA,KAAA,MAAA,CAAIL,UAAU,kCACbG,SAAA,CAACL,EAAAA,IAAA,KAAA,CAAGE,UAAU,oCAAoCG,SAAK,UACvDE,EAAAA,KAAC,MAAI,CAAAL,UAAU,wCACbG,SAAA,CAAAE,OAAC,MACC,CAAAF,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAO,YAC/CL,EAAAA,IAAC,KAAEE,UAAU,+BACVG,WAAe/B,EAAY8D,eAAgBhE,EAAUyD,sBAGzD,MACC,CAAAxB,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAO,YAC/CE,EAAAA,KAAC,IAAE,CAAAL,UAAU,+BACVG,SAAA,CAAA/B,EAAYsE,cAAcN,iBAAiB,iBAG/C,MACC,CAAAjC,SAAA,CAACL,EAAAA,IAAA,OAAA,CAAKE,UAAU,wBAAwBG,SAAM,WAC9CL,EAAAA,IAAC,KAAEE,UAAU,+BACVG,WAAe/B,EAAYuE,aAAczE,EAAUyD,qBAQ9D7B,EAAAA,IAAC,OAAIE,UAAU,aACZG,SAAgB,cAAXN,QAAiD,IAAzB9B,EAAKyC,iBACjCH,EAAAA,KAAC,SAAA,CACCC,QA9SaxB,UACvB,IAAKf,EAAM,OAGP,GAAC6E,OAAOC,QADW,yBAGnB,UACIzD,EAAsB0D,WAAW/E,EAAK0E,IACnC5E,EAAA,eAAeH,4BACjB+B,GAEPsD,MAAM,oBACR,GAmSU/C,UAAU,+FAEVG,SAAA,CAACL,EAAAA,IAAAkD,EAAA,CAAwBhD,UAAU,iBAAiB,aAO1DF,EAAAA,IAACmD,EAAA,CACCC,OAAQ1E,EACR2E,QAAS,KACP1E,GAAoB,GACpBE,EAAiB,OAEnByE,SA5UoBtE,MAAOuE,IACjC,GAAK3E,EAED,UACIU,EAAsBkE,aAAa5E,EAAc+D,GAAIY,GAClDxE,IACTJ,GAAoB,GACpBE,EAAiB,YACVc,GAED,MAAAA,CACR,GAkUME,MAAOjB,EACPX,OACA4D,SAAUzD,EAAUyD"}