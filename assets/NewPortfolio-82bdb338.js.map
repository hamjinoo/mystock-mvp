{"version":3,"file":"NewPortfolio-82bdb338.js","sources":["../../src/pages/NewPortfolio.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { AccountService } from \"../services/accountService\";\r\nimport { PortfolioService } from \"../services/portfolioService\";\r\nimport { NewPortfolio } from \"../types\";\r\n\r\ntype InvestmentPeriod = keyof typeof PERIOD_CONFIGS;\r\n\r\ninterface PeriodConfig {\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nconst PERIOD_CONFIGS = {\r\n  LONG_TERM: {\r\n    name: \"장기 투자\",\r\n    description: \"3년 이상의 장기 투자 포트폴리오\",\r\n  },\r\n  MID_TERM: {\r\n    name: \"중기 투자\",\r\n    description: \"1~3년의 중기 투자 포트폴리오\",\r\n  },\r\n  SHORT_TERM: {\r\n    name: \"단기 투자\",\r\n    description: \"1년 미만의 단기 투자 포트폴리오\",\r\n  },\r\n  UNCATEGORIZED: {\r\n    name: \"미분류\",\r\n    description: \"투자 기간이 정해지지 않은 포트폴리오\",\r\n  },\r\n  CUSTOM: {\r\n    name: \"직접 입력\",\r\n    description: \"투자 기간을 직접 설정\",\r\n  },\r\n} as const;\r\n\r\nexport const NewPortfolioPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [selectedPeriod, setSelectedPeriod] =\r\n    useState<InvestmentPeriod>(\"LONG_TERM\");\r\n  const [customDescription, setCustomDescription] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    checkAccounts();\r\n  }, []);\r\n\r\n  const checkAccounts = async () => {\r\n    try {\r\n      const accounts = await AccountService.getAll();\r\n      if (accounts.length === 0) {\r\n        setError(\"계좌가 없습니다. 먼저 계좌를 생성해주세요.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"계좌 확인 중 오류:\", error);\r\n      setError(\"계좌 정보를 불러올 수 없습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // 첫 번째 계좌 찾기\r\n      const accounts = await AccountService.getAll();\r\n      if (accounts.length === 0) {\r\n        alert(\"계좌가 없습니다. 먼저 계좌를 생성해주세요.\");\r\n        navigate(\"/accounts/new\");\r\n        return;\r\n      }\r\n\r\n      const firstAccount = accounts[0];\r\n\r\n      const portfolio: NewPortfolio = {\r\n        name: name.trim(),\r\n        accountId: firstAccount.id!, // 첫 번째 계좌 ID 사용\r\n        currency: firstAccount.currency, // 첫 번째 계좌의 통화 사용\r\n        config: {\r\n          targetAllocation: 0,\r\n          period:\r\n            selectedPeriod === \"CUSTOM\" ? \"UNCATEGORIZED\" : selectedPeriod,\r\n          description:\r\n            selectedPeriod === \"CUSTOM\"\r\n              ? customDescription\r\n              : PERIOD_CONFIGS[selectedPeriod].description,\r\n          totalCapital: 0,\r\n        },\r\n      };\r\n\r\n      await PortfolioService.create(portfolio);\r\n      navigate(\"/portfolios\");\r\n    } catch (error) {\r\n      console.error(\"포트폴리오 생성 중 오류:\", error);\r\n      alert(\"포트폴리오 생성에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-2xl mx-auto text-center\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">새 포트폴리오</h1>\r\n          <p className=\"text-red-400 mb-4\">{error}</p>\r\n          <button\r\n            onClick={() => navigate(\"/accounts/new\")}\r\n            className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n          >\r\n            새 계좌 등록하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <h1 className=\"text-2xl font-bold mb-8\">새 포트폴리오</h1>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              포트폴리오명\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"예: 성장주 포트폴리오, 배당주 포트폴리오\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-4\">투자 기간</label>\r\n            <div className=\"space-y-4\">\r\n              {(Object.keys(PERIOD_CONFIGS) as InvestmentPeriod[]).map(\r\n                (period) => {\r\n                  const config = PERIOD_CONFIGS[period];\r\n                  return (\r\n                    <div\r\n                      key={period}\r\n                      className={`p-4 rounded cursor-pointer border-2 ${\r\n                        selectedPeriod === period\r\n                          ? \"border-blue-500 bg-gray-800\"\r\n                          : \"border-gray-700 bg-gray-800 hover:border-gray-600\"\r\n                      }`}\r\n                      onClick={() => setSelectedPeriod(period)}\r\n                    >\r\n                      <div className=\"flex items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"period\"\r\n                          checked={selectedPeriod === period}\r\n                          onChange={() => setSelectedPeriod(period)}\r\n                          className=\"mr-2\"\r\n                        />\r\n                        <div>\r\n                          <h3 className=\"font-medium\">{config.name}</h3>\r\n                          <p className=\"text-sm text-gray-400\">\r\n                            {config.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      {period === \"CUSTOM\" && selectedPeriod === \"CUSTOM\" && (\r\n                        <div className=\"mt-3\">\r\n                          <label className=\"block text-sm text-gray-400 mb-1\">\r\n                            설명\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={customDescription}\r\n                            onChange={(e) =>\r\n                              setCustomDescription(e.target.value)\r\n                            }\r\n                            className=\"w-full px-3 py-1 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                            placeholder=\"투자 전략에 대한 설명을 입력하세요\"\r\n                            required={selectedPeriod === \"CUSTOM\"}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                }\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => navigate(\"/portfolios\")}\r\n              className=\"px-6 py-2 text-gray-400 hover:text-gray-300\"\r\n            >\r\n              취소\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n              disabled={\r\n                !name.trim() ||\r\n                (selectedPeriod === \"CUSTOM\" && !customDescription.trim())\r\n              }\r\n            >\r\n              생성\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPortfolioPage;\r\n"],"names":["PERIOD_CONFIGS","LONG_TERM","name","description","MID_TERM","SHORT_TERM","UNCATEGORIZED","CUSTOM","NewPortfolioPage","navigate","useNavigate","setName","useState","selectedPeriod","setSelectedPeriod","customDescription","setCustomDescription","loading","setLoading","error","setError","useEffect","checkAccounts","async","AccountService","getAll","length","jsx","className","children","LoadingSpinner","jsxs","onClick","onSubmit","e","preventDefault","accounts","alert","firstAccount","portfolio","trim","accountId","id","currency","config","targetAllocation","period","totalCapital","PortfolioService","create","type","value","onChange","target","placeholder","required","Object","keys","map","checked","disabled"],"mappings":"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"}