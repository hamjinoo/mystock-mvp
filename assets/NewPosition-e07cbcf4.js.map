{"version":3,"file":"NewPosition-e07cbcf4.js","sources":["../../src/pages/NewPosition.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { CurrencyInput } from \"../components/CurrencyInput\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { AccountService } from \"../services/accountService\";\r\nimport { PortfolioService } from \"../services/portfolioService\";\r\nimport { Account, NewPosition, Portfolio } from \"../types\";\r\n\r\nexport const NewPositionPage: React.FC = () => {\r\n  const { accountId } = useParams<{ accountId: string }>();\r\n  const navigate = useNavigate();\r\n  const [account, setAccount] = useState<Account>();\r\n  const [allPortfolios, setAllPortfolios] = useState<Portfolio[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [avgPrice, setAvgPrice] = useState(0);\r\n  const [currentPrice, setCurrentPrice] = useState(0);\r\n  const [portfolioId, setPortfolioId] = useState<number>();\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [accountId]);\r\n\r\n  const loadData = async () => {\r\n    if (!accountId) return;\r\n\r\n    try {\r\n      console.log(\"데이터 로딩 시작... accountId:\", accountId);\r\n\r\n      // 포트폴리오 데이터 수정\r\n      await PortfolioService.fixPortfolioData();\r\n\r\n      // 계좌 정보 로드\r\n      const accountData = await AccountService.getById(Number(accountId));\r\n      console.log(\"계좌 정보:\", accountData);\r\n\r\n      if (!accountData) {\r\n        throw new Error(\"계좌를 찾을 수 없습니다.\");\r\n      }\r\n\r\n      setAccount(accountData);\r\n\r\n      // 모든 포트폴리오 로드 (계좌 제한 없음)\r\n      const portfolios = await PortfolioService.getAll();\r\n      console.log(\"전체 포트폴리오 목록:\", portfolios);\r\n\r\n      setAllPortfolios(portfolios);\r\n\r\n      if (portfolios.length > 0) {\r\n        // 현재 계좌의 포트폴리오가 있으면 우선 선택, 없으면 첫 번째 포트폴리오 선택\r\n        const accountPortfolios = portfolios.filter(\r\n          (p) => p.accountId === Number(accountId)\r\n        );\r\n        const defaultPortfolio =\r\n          accountPortfolios.length > 0 ? accountPortfolios[0] : portfolios[0];\r\n        console.log(\"기본 선택 포트폴리오:\", defaultPortfolio);\r\n        setPortfolioId(defaultPortfolio.id);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"데이터 로딩 중 오류:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!accountId || !portfolioId) return;\r\n\r\n    try {\r\n      const selectedPortfolio = allPortfolios.find((p) => p.id === portfolioId);\r\n      if (!selectedPortfolio) {\r\n        throw new Error(\"선택한 포트폴리오를 찾을 수 없습니다.\");\r\n      }\r\n\r\n      const position: NewPosition = {\r\n        portfolioId,\r\n        symbol: symbol.trim().toUpperCase(),\r\n        name: name.trim() || symbol.trim().toUpperCase(),\r\n        quantity,\r\n        avgPrice,\r\n        currentPrice,\r\n        tradeDate: Date.now(),\r\n        strategyCategory: selectedPortfolio.config?.period || \"UNCATEGORIZED\",\r\n        strategyTags: [],\r\n      };\r\n\r\n      await PortfolioService.createPosition(position);\r\n\r\n      // 선택한 포트폴리오가 속한 계좌로 리다이렉트\r\n      const targetAccountId = selectedPortfolio.accountId;\r\n      navigate(`/accounts/${targetAccountId}`);\r\n    } catch (error) {\r\n      console.error(\"포지션 생성 중 오류:\", error);\r\n      alert(\"포지션 생성에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  // 선택된 포트폴리오의 통화 가져오기\r\n  const selectedPortfolio = allPortfolios.find((p) => p.id === portfolioId);\r\n  const currency = selectedPortfolio?.currency || account?.currency || \"KRW\";\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!account) {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-400\">계좌를 찾을 수 없습니다.</p>\r\n          <button\r\n            onClick={() => navigate(\"/accounts\")}\r\n            className=\"mt-4 text-blue-500 hover:text-blue-400\"\r\n          >\r\n            계좌 목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (allPortfolios.length === 0) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-2xl mx-auto text-center\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">새 종목</h1>\r\n          <p className=\"text-gray-400 mb-4\">포트폴리오가 없습니다.</p>\r\n          <button\r\n            onClick={() => navigate(\"/portfolios/new\")}\r\n            className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n          >\r\n            새 포트폴리오 만들기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <h1 className=\"text-2xl font-bold mb-8\">새 종목</h1>\r\n        <div className=\"mb-4 p-4 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\r\n          <p className=\"text-sm text-blue-400\">\r\n            💡 <strong>팁:</strong> 이제 모든 포트폴리오에서 선택할 수 있습니다.\r\n            동일한 종목을 여러 포트폴리오에 나누어 관리하여 리밸런싱을 더 쉽게\r\n            할 수 있습니다.\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              포트폴리오 선택\r\n            </label>\r\n            <select\r\n              value={portfolioId}\r\n              onChange={(e) => setPortfolioId(Number(e.target.value))}\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              required\r\n            >\r\n              {allPortfolios.map((portfolio) => (\r\n                <option key={portfolio.id} value={portfolio.id}>\r\n                  {portfolio.name} ({portfolio.config?.period || \"미분류\"}) -{\" \"}\r\n                  {portfolio.currency}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <p className=\"text-xs text-gray-400 mt-1\">\r\n              현재 계좌: {account.accountName} ({account.broker})\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">종목 코드</label>\r\n            <input\r\n              type=\"text\"\r\n              value={symbol}\r\n              onChange={(e) => setSymbol(e.target.value)}\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"예: AAPL, 005930\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">종목명</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"예: Apple Inc., 삼성전자\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">수량</label>\r\n              <input\r\n                type=\"number\"\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(Number(e.target.value))}\r\n                className=\"w-full px-4 py-2 bg-gray-700 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                placeholder=\"예: 10\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <CurrencyInput\r\n              label=\"평균단가\"\r\n              value={avgPrice}\r\n              onChange={setAvgPrice}\r\n              currency={currency}\r\n              required\r\n              type=\"price\"\r\n            />\r\n\r\n            <CurrencyInput\r\n              label=\"현재가\"\r\n              value={currentPrice}\r\n              onChange={setCurrentPrice}\r\n              currency={currency}\r\n              required\r\n              type=\"price\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                // 선택된 포트폴리오가 있으면 해당 계좌로, 없으면 원래 계좌로\r\n                const selectedPortfolio = allPortfolios.find(\r\n                  (p) => p.id === portfolioId\r\n                );\r\n                const targetAccountId = selectedPortfolio\r\n                  ? selectedPortfolio.accountId\r\n                  : accountId;\r\n                navigate(`/accounts/${targetAccountId}`);\r\n              }}\r\n              className=\"px-6 py-2 text-gray-400 hover:text-gray-300\"\r\n            >\r\n              취소\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n              disabled={\r\n                !portfolioId ||\r\n                !symbol.trim() ||\r\n                quantity <= 0 ||\r\n                avgPrice <= 0 ||\r\n                currentPrice <= 0\r\n              }\r\n            >\r\n              생성\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPositionPage;\r\n"],"names":["NewPositionPage","accountId","useParams","navigate","useNavigate","account","setAccount","useState","allPortfolios","setAllPortfolios","loading","setLoading","symbol","setSymbol","name","setName","quantity","setQuantity","avgPrice","setAvgPrice","currentPrice","setCurrentPrice","portfolioId","setPortfolioId","useEffect","loadData","async","PortfolioService","fixPortfolioData","accountData","AccountService","getById","Number","Error","portfolios","getAll","length","accountPortfolios","filter","p","defaultPortfolio","id","error","selectedPortfolio","find","currency","jsx","className","children","LoadingSpinner","jsxs","onClick","onSubmit","e","preventDefault","position","trim","toUpperCase","tradeDate","Date","now","strategyCategory","config","period","strategyTags","createPosition","targetAccountId","alert","value","onChange","target","required","map","portfolio","accountName","broker","type","placeholder","min","step","CurrencyInput","label","disabled"],"mappings":"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"}